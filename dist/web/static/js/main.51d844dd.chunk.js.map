{"version":3,"sources":["containers/Menu.js","containers/Layout.js","containers/SelectionTypeNoeud.js","components/pkiHelper.js","containers/ChargerCleCert.js","containers/PemUtils.js","containers/GenererNouvelleCle.js","components/pemDownloads.js","containers/ConfigurationInternet.js","containers/PagesEtat.js","containers/ConfigurationNoeudIdmg.js","containers/ConfigurationNoeud.js","containers/Installation.js","containers/RenouvellementIntermediaire.js","containers/App.js","serviceWorker.js","components/i18n.js","index.js"],"names":["Menu","props","Navbar","collapseOnSelect","expand","bg","variant","fixed","Nav","Link","className","onClick","changerPage","eventKey","Trans","Toggle","Collapse","id","href","rootProps","changerLanguage","LayoutMillegrilles","Entete","Contenu","page","Footer","Container","idmg","qrCode","value","size","fluid","Row","Col","sm","title","manifest","date","values","version","SelectionnerTypeNoeud","state","afficherAide","fermerAide","event","setState","informationTypes","Button","this","AideTypes","fermer","FormTypeNoeud","React","Component","Alert","onClose","dismissible","Heading","md","Form","Group","Check","Input","type","name","onChange","setTypeNoeud","Label","afficherPageTypeInstallation","disabled","typeNoeud","forgecommon","chargerClePrivee","preparerCleCertMillegrille","certificatPem","clePriveePem","motdepasse","clePrivee","chargerPemClePriveeEd25519","password","encoderIdmg","console","debug","signerCSRIntermediaire","csrPem","infoClecertMillegrille","certificat","genererCertificatIntermediaire","certPem","chargerCertificatPem","pem","forgePki","certificateFromPem","motdepasseCle","genererPassword","genererClePrivee","dechiffre","pemChiffre","publicKeyCrypto","publicKey","privateKeyCrypto","privateKey","genererCertificatMilleGrille","ChargementClePrivee","cleChiffree","afficherErreur","erreurChargement","clePriveeChargee","modeScanQR","videoinput","resultatScan","partiesDeCle","nombrePartiesDeCle","nombrePartiesDeCleScannees","partiesDeCertificat","nombrePartiesDeCertificatTotal","nombrePartiesDeCertificatScannes","changerChamp","currentTarget","_","recevoirFichiers","acceptedFiles","traiterUploads","resultats","length","resultat","racine","Promise","resolve","reject","chargerCle","activerScanQr","fermerScanQr","erreurScanQr","error","handleScan","data","lignesQR","split","tag","index","count","Number","comptePartiesDeCle","Object","keys","comptePartiesDeCertificat","assemblerCleChiffree","assemblerCertificat","cacherErreurChargement","detecterAppareilsDisponibles","then","apps","setInfoClecertMillegrille","traiterCsr","contenuCsr","csr","urlCsr","axios","get","csrResponse","certificatintermediairePem","certificatintermediaireCert","setInfoCertificatNoeudProtege","cacherBoutons","QRCodeReader","handleError","nombrePartiesDeCleTotal","contenu","intermediaireCert","subject","getField","ChargerInformation","setPage","existantSeulement","FormUpload","bontonQrScan","controlId","Control","autoComplete","placeholder","onDrop","getRootProps","getInputProps","all","map","file","reader","FileReader","onload","buffer","result","contenuFichier","String","fromCharCode","apply","Uint8Array","onerror","err","readAsArrayBuffer","fichierCharge","contenuJson","JSON","parse","nombreParties","idx","InformationCertificat","RenderPEM","qrCodes","lignesPEM","trim","startsWith","slice","derniereLigne","pemFiltre","join","nbCodes","Math","ceil","tailleMaxAjustee","debut","fin","pemData","nom","push","xs","RenderPair","PageBackupCles","certificatRacine","cleChiffreeRacine","lg","GenererNouvelleCle","certificatRacinePret","credentialsRacine","etapeVerifierCle","etapeGenererIntermediaire","etapeDemarrerInstallation","etapeSurveillerInstallation","backupComplete","url","setCertificatMillegrille","certificatMillegrillePem","setCertificatIntermediaire","certificatIntermediairePem","setBackupFait","imprimer","window","print","genererNouveauCertificatMilleGrille","catch","GenererCle","setConfigurationEnCours","boutonDownload","dataUrl","jsonContent","stringContent","stringify","blobFichier","Blob","URL","createObjectURL","genererUrlDataDownload","fichierDownload","download","RE_DOMAINE","PageConfigurationInternet","internetDisponible","domaine","fqdnDetecte","domaineValide","test","domainesAdditionnels","configurationAvancee","modeTest","modeCreation","cloudns_subauthid","cloudns_password","dnssleep","attenteServeur","setInternetDisponible","eventInfo","changerDomaine","valide","changerTextfield","setCheckbox","checked","setModeCreation","configurerDomaine","config","item","setInfoInternet","revenirPageSaisie","PageConfigurationDomaineSetup","AfficherFormInternet","cloudnsParams","htmlFor","InputGroup","Text","FormControl","as","ipDetectee","flagDomaineInvalide","ConfigurationCompletee","attente","redemarrer","infoCertificatNoeudProtege","paramsInstallation","chainePem","securite","post","response","setTimeout","location","reload","etat","ConfigurerNoeudIdmg","suivant","setIdmg","FormIdmg","ConfigurerNoeud","InstallerNoeudProtege","ConfigurerNoeudPrive","ConfigurerNoeudPublic","configurerNoeudPrive","precedent","configurerNoeudPublic","installerNoeudProtege","PageConfigurationDomaineAttente","resultatTestAccesUrl","domaineConfigure","certificatRecu","serveurWebRedemarre","erreur","messageErreur","stackErreur","testerAccesUrl","compteurAttenteCertificatWeb","compteurAttenteRedemarrageServeur","instanceAxios","create","timeout","httpsAgent","https","Agent","keepAlive","rejectUnauthorized","reponseTest","message","stack","attendreCertificatWeb","pret","attendreRedemarrageServeur","configurationCompletee","infoInternet","paramsDomaine","cloudnsSubid","cloudnsPassword","callback","etapes","spinner","complet","etatTest","etatConfigurationDomaine","etatConfigurationSsl","AfficherErreurConnexion","retour","reessayer","params","intermediairePem","certificatMillegrille","certificatIntermediaire","reponse","MAPPING_PAGES","Installation","infoMonitorChargee","erreurAcces","includes","dataReponse","info","noeudId","instance_id","ca","setInfo","domaineDetecte","hostname","fqdn_detecte","ip_detectee","Page","PageAttente","RenouvellementIntermediaire","useState","setCsr","confirmation","setConfirmation","setErreur","erreurCb","useCallback","useEffect","demanderCsr","e","soumettreIntermediaire","confirmationCb","show","status","Error","splitPEMCerts","extraireExtensionsMillegrille","LayoutApplication","idmgCompte","pageAffichee","affichage","AfficherInformationNoeud","certificatExpire","certificatJoursExpiration","intermediaireExpire","pemCertificat","pemCa","setCertificat","idmgCalcule","setIdmgCalcule","extensions","setExtensions","pems","cert","interCert","exts","getIdmg","maintenant","Date","getTime","tempsExpiration","validity","notAfter","floor","min","listeInfo","roles","toString","niveauxSecurite","boutons","App","setIntermediairePem","setIntermediaireCert","setManifest","PageMappee","useMemo","pageMappee","conserverInfo","changerInfoClecertMillegrille","Boolean","match","resources","fr","en","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","interpolation","escapeValue","format","lng","moment","locale","isNaN","toFixed","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"koFAIe,SAASA,EAAKC,GAW3B,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,MAApE,UACE,cAACC,EAAA,EAAIC,KAAL,CAAUC,UAAU,eAAeC,QAASV,EAAMW,YAAaC,SAAS,UAAxE,SACE,cAACC,EAAA,EAAD,gCAEF,cAACZ,EAAA,EAAOa,OAAR,CAAe,gBAAc,2BAC7B,eAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,yBAApB,UACE,cAACT,EAAA,EAAD,UACE,cAACA,EAAA,EAAIC,KAAL,CAAUS,KAAK,QAEjB,cAACV,EAAA,EAAD,CAAKE,UAAU,YAEf,cAACF,EAAA,EAAD,CAAKE,UAAU,sBAAf,SACE,cAACF,EAAA,EAAIC,KAAL,CAAUE,QAASV,EAAMkB,UAAUC,gBAAnC,SAAoD,cAACN,EAAA,EAAD,2C,OCnBvD,SAASO,EAAmBpB,GAEjC,OACE,sBAAKS,UAAU,eAAf,UACE,gCACE,cAACY,EAAD,CAAQV,YAAaX,EAAMW,YAAaO,UAAWlB,EAAMkB,YACzD,cAACI,EAAD,CAASX,YAAaX,EAAMW,YAAaY,KAAMvB,EAAMuB,UAEvD,cAACC,EAAD,CAAQN,UAAWlB,EAAMkB,eAM/B,SAASG,EAAOrB,GACd,OACE,eAACyB,EAAA,EAAD,WACE,cAAC1B,EAAD,CAAMY,YAAaX,EAAMW,YAAaO,UAAWlB,EAAMkB,YACvD,iDAKN,SAASI,EAAQtB,GACf,OACE,cAACyB,EAAA,EAAD,UACGzB,EAAMuB,OAKb,SAASC,EAAOxB,GAEd,IAAM0B,EAAO1B,EAAMkB,UAAUQ,KACzBC,EAAS,KAMb,OAJG3B,EAAMkB,UAAUQ,OACjBC,EAAS,cAAC,IAAD,CAAQC,MAAO,QAAUF,EAAMG,KAAM,MAI9C,cAACJ,EAAA,EAAD,CAAWK,OAAK,EAACrB,UAAU,iBAA3B,SACE,eAACsB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGxB,UAAU,gBACtB,cAACuB,EAAA,EAAD,CAAKC,GAAI,EAAGxB,UAAU,gBAAtB,SACE,sBAAKA,UAAU,qBAAf,UACE,0CAAaiB,KACb,gCACE,cAACb,EAAA,EAAD,iCAAkC,IAClC,sBAAMqB,MAAOlC,EAAMkB,UAAUiB,SAASC,KAAtC,SACE,cAACvB,EAAA,EAAD,CAAOwB,OAAQ,CAACC,QAAStC,EAAMkB,UAAUiB,SAASG,SAAlD,2CAKR,cAACN,EAAA,EAAD,CAAKC,GAAI,EAAGxB,UAAU,eAAtB,SAAsCkB,S,oEC7DjCY,EAAb,4MAEEC,MAAQ,CACNC,cAAc,GAHlB,EAMEC,WAAa,SAAAC,GACX,EAAKC,SAAS,CAACH,cAAc,KAPjC,4CAUE,WAAU,IAAD,OAEHI,EACF,cAACd,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACc,EAAA,EAAD,CAAQpC,QAAS,SAAAiC,GAAQ,EAAKC,SAAS,CAACH,cAAc,KAAtD,SAA+D,mBAAGhC,UAAU,gCAQlF,OAJGsC,KAAKP,MAAMC,eACZI,EAAmB,cAACG,EAAD,CAAWC,OAAQF,KAAKL,cAI3C,eAACjB,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,6DADF,2FAODa,EAED,cAACd,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,mDAKJ,cAACkB,EAAD,eAAmBH,KAAK/C,eA1ChC,GAA2CmD,IAAMC,WAiDjD,SAASJ,EAAUhD,GACjB,OACE,eAACqD,EAAA,EAAD,CAAOhD,QAAQ,OAAOiD,QAAStD,EAAMiD,OAAQM,aAAW,EAAxD,UACE,cAACF,EAAA,EAAMG,QAAP,iDACA,eAACzB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKyB,GAAI,EAAT,qBACA,cAACzB,EAAA,EAAD,CAAKyB,GAAI,GAAT,iRAOF,eAAC1B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKyB,GAAI,EAAT,mBACA,cAACzB,EAAA,EAAD,CAAKyB,GAAI,GAAT,6NAMF,eAAC1B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKyB,GAAI,EAAT,oBACA,cAACzB,EAAA,EAAD,CAAKyB,GAAI,GAAT,oOAUR,SAASP,EAAclD,GACrB,OACE,qCACE,cAAC0D,EAAA,EAAD,UAEE,mCACE,eAACA,EAAA,EAAKC,MAAN,WACE,eAACD,EAAA,EAAKE,MAAN,CAAY5C,GAAG,oBAAf,UACE,cAAC0C,EAAA,EAAKE,MAAMC,MAAZ,CAAkBC,KAAK,QAAQC,KAAK,aAAanC,MAAM,UACrCoC,SAAUhE,EAAMiE,eAClC,cAACP,EAAA,EAAKE,MAAMM,MAAZ,yBAEF,eAACR,EAAA,EAAKE,MAAN,CAAY5C,GAAG,kBAAf,UACE,cAAC0C,EAAA,EAAKE,MAAMC,MAAZ,CAAkBC,KAAK,QAAQC,KAAK,aAAanC,MAAM,QACrCoC,SAAUhE,EAAMiE,eAClC,cAACP,EAAA,EAAKE,MAAMM,MAAZ,uBAEF,eAACR,EAAA,EAAKE,MAAN,CAAY5C,GAAG,mBAAf,UACE,cAAC0C,EAAA,EAAKE,MAAMC,MAAZ,CAAkBC,KAAK,QAAQC,KAAK,aAAanC,MAAM,SACrCoC,SAAUhE,EAAMiE,eAClC,cAACP,EAAA,EAAKE,MAAMM,MAAZ,+BAMR,cAACnC,EAAA,EAAD,CAAKtB,UAAU,oBAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAACc,EAAA,EAAD,CAAQpC,QAASV,EAAMmE,6BAA8BvC,MAAM,OACnDwC,UAAWpE,EAAMqE,UADzB,4B,4CC9FmBC,IAArBC,iBAiBD,SAAeC,EAAtB,sC,sDAAO,WAA0CC,EAAeC,EAAcC,GAAvE,0FAQCC,EAAYC,qCAA2BH,EAAc,CAACI,SAAUH,IARjE,SAUcI,sBAAYN,GAV1B,cAUC/C,EAVD,OAWLsD,QAAQC,MAAM,oBAAqBvD,GAX9B,kBAsBE,CAACA,OAAMkD,cAtBT,4C,sBAyBA,SAAeM,EAAtB,oC,sDAAO,WAAsCC,EAAQC,GAA9C,4FACGC,EAA0BD,EAA1BC,WAAYT,EAAcQ,EAAdR,UADf,SAEiBU,yCAA+BH,EAAQE,EAAYT,GAFpE,cAECW,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeC,EAAtB,kC,sDAAO,WAAoCC,GAApC,oGACEC,MAASC,mBAAmBF,IAD9B,4C,4EAKA,qHAGCG,EAAgBC,4BAHjB,SAWKC,2BAAiB,CAAChB,SAAUc,EAAeG,WAAW,IAX3D,uBAOHN,EAPG,EAOHA,IACAO,EARG,EAQHA,WACWC,EATR,EASHC,UACYC,EAVT,EAUHC,WAEFpB,QAAQC,MAAM,kBAAmBgB,GACjCjB,QAAQC,MAAM,mBAAoBkB,GAIlCnB,QAAQC,MAAM,iBAAkB,KAAKQ,GACrCT,QAAQC,MAAM,mBAAoB,KAAKe,GAlBlC,UAoB8BK,uCAA6BZ,GApB3D,wBAoBE/D,EApBF,EAoBEA,KAAW6D,EApBb,EAoBQE,IAEbT,QAAQC,MAAM,4BAA6BM,GAtBtC,kBAuBE,CAAC7D,OAAM6D,UAASb,aAAcsB,EAAYJ,kBAvB5C,6C,sBC3DA,IAAMU,EAAb,4MAEE9D,MAAQ,CACN6C,WAAY,GACZV,WAAY,GACZ4B,YAAa,GAEbC,gBAAgB,EAChBC,iBAAkB,GAClBC,kBAAkB,EAElBC,YAAY,EACZC,YAAY,EAEZC,aAAc,GAEdC,aAAc,GACdC,mBAAoB,GACpBC,2BAA4B,EAE5BC,oBAAqB,GACrBC,+BAAgC,GAChCC,iCAAkC,GAtBtC,EA6EEC,aAAe,SAAAzE,GACb,MAAsBA,EAAM0E,cAArBtD,EAAP,EAAOA,KAAMnC,EAAb,EAAaA,MACb,EAAKgB,SAAL,eAAgBmB,EAAOnC,GAAvB,iDAA+B,WAAM0F,GAAN,2EAC7BtC,QAAQC,MAAM,aAAc,EAAKzC,OADJ,2CAA/B,kCAAAO,KAAA,iBA/EJ,EAoFEwE,iBApFF,iDAoFqB,WAAMC,GAAN,uGACOC,EAAeD,GADtB,UACXE,EADW,OAEjB1C,QAAQC,MAAM,wBAAyByC,KAGpCA,EAAUC,OAAS,GALL,oBAMTC,EAAWF,EAAU,GACrBnB,EAAcqB,EAASC,OAAOtB,YAC9BlB,EAAauC,EAASC,OAAOxC,YAChCkB,IAAelB,EATH,kCAUP,IAAIyC,SAAQ,SAACC,EAASC,GAC1B,EAAKpF,SAAS,CAAC2D,cAAalB,eAAa,SAAAiC,GAEvC,EAAKW,aACLF,UAdS,4CApFrB,wDAyGEG,cAAgB,SAAAZ,GAAM,EAAK1E,SAAS,CAAC+D,YAAY,KAzGnD,EA0GEwB,aAAe,SAAAb,GAAM,EAAK1E,SAAS,CAAC+D,YAAY,KA1GlD,EA2GEyB,aAAe,SAAAzF,GAAUqC,QAAQqD,MAAM,qBAAsB1F,GAAQ,EAAKwF,gBA3G5E,EA4GEG,WA5GF,iDA4Ge,WAAMC,GAAN,yGAEPA,EAFO,iCAGH,IAAIT,SAAQ,SAACC,EAASC,GAC1B,EAAKpF,SAAS,CAACiE,aAAc0B,IAAO,SAAAjB,GAAIS,UAJjC,UAQc,KADjBS,EAAWD,EAAKE,MAAM,OAChBd,OARH,gBAUP,EAAK/E,SAAS,CAAC+B,WAAY4D,IAAO,SAAAjB,GAAI,EAAKW,gBAVpC,0BAWqB,IAApBO,EAASb,OAXV,oBAcW,KADde,EAAMF,EAAS,GAAGC,MAAM,MACrBd,OAdA,oBAeC7D,EAAO4E,EAAI,GACXC,EAAQD,EAAI,GACZE,EAAQC,OAAOH,EAAI,IAEb,eAAT5E,EAnBE,wBAoBGgD,EApBH,2BAoBsB,EAAKtE,MAAMsE,cApBjC,kBAoBgD6B,EAAQH,EAAS,KAC9DM,EAAqBC,OAAOC,KAAKlC,GAAca,OArBlD,UAsBG,IAAIG,SAAQ,SAACC,EAASC,GAC1B,EAAKpF,SAAS,CACZkE,eACAC,mBAAoB6B,EACpB5B,2BAA4B8B,IAC3B,SAAAxB,GAAIS,UA3BN,gCA6Bc,gBAATjE,IACFmD,EAD0B,2BACA,EAAKzE,MAAMyE,qBADX,kBACiC0B,EAAQH,EAAS,KAC5ES,EAA4BF,OAAOC,KAAK/B,GAAqBU,OACnE,EAAK/E,SAAS,CACZqE,sBACAC,+BAAgC0B,EAChCzB,iCAAkC8B,KAnCjC,QA0CL,EAAKzG,MAAMuE,qBAAuB,EAAKvE,MAAMwE,6BAEzCT,EAAc2C,GAAqB,EAAK1G,MAAMsE,cACpD,EAAKlE,SAAS,CAAC2D,gBAAc,SAAAe,GAAI,EAAKW,iBAIpC,EAAKzF,MAAM0E,iCAAmC,EAAK1E,MAAM2E,mCAErD9B,EAAa8D,GAAoB,EAAK3G,MAAMyE,qBAClD,EAAKrE,SAAS,CAACyC,eAAa,SAAAiC,GAAI,EAAKW,iBApD9B,4CA5Gf,wDAsKEmB,uBAAyB,SAAAzG,GACvB,EAAKC,SAAS,CAAC4D,gBAAgB,KAvKnC,uDAyBE,WAAqB,IAAD,OAClB6C,cAA+BC,MAAK,SAAAC,GAAOvE,QAAQC,MAAM,sBAAuBsE,GAAO,EAAK3G,SAAL,eAAkB2G,SA1B7G,yEA6BE,mGACKxG,KAAKP,MAAM6C,YAActC,KAAKP,MAAMmC,YAAc5B,KAAKP,MAAM+D,aADlE,iCAGMvB,QAAQC,MAAM,uBAAwBlC,KAAKP,OAHjD,SAI2CgC,EACnCzB,KAAKP,MAAM6C,WAAYtC,KAAKP,MAAM+D,YAAaxD,KAAKP,MAAMmC,YALlE,OAIYS,EAJZ,OAMMJ,QAAQC,MAAM,6BAA8BG,GAEzCA,GACDrC,KAAKH,SAAS,CAAC8D,kBAAkB,EAAM/B,WAAY,GAAI4B,YAAa,KACpExD,KAAKoF,eACLpF,KAAK/C,MAAMkB,UAAUsI,0BAArB,2BAAmDpE,GAAnD,IAA2EC,WAAYtC,KAAKP,MAAM6C,cAClGL,QAAQC,MAAM,gCAAiClC,KAAK/C,MAAMkB,WAG1D6B,KAAK0G,cAGL1G,KAAKH,SAAS,CAAC8D,kBAAkB,EAAOF,gBAAgB,IAlBhE,kDAqBMxB,QAAQqD,MAAM,4BAAd,MACAtF,KAAKH,SAAS,CAAC6D,iBAAiB,EAAD,GAAOD,gBAAgB,IAtB5D,gCAyBIxB,QAAQC,MAAM,0BAA2BlC,KAAKP,OAzBlD,0DA7BF,+HA0DE,yGACMkH,EAAa3G,KAAK/C,MAAM2J,IAD9B,uBAGUC,EAAS7G,KAAK/C,MAAM4J,QAAU,wBAHxC,SAI8BC,IAAMC,IAAIF,GAJxC,OAIUG,EAJV,OAKIL,EAAaK,EAAYxB,KAL7B,uBAU2CrD,EAAuBwE,EAAY3G,KAAK/C,MAAMkB,UAAUkE,wBAVnG,cAUQ4E,EAVR,iBAW4CxE,EAAqBwE,GAXjE,QAWQC,EAXR,OAcElH,KAAKH,SAAS,CAACoH,6BAA4BC,gCAE3ClH,KAAK/C,MAAMkB,UAAUgJ,8BAA8BF,EAA4BC,GAhBjF,iDA1DF,0EA0KE,WAEE,IAAQE,EAAkBpH,KAAK/C,MAAvBmK,cAER,GAAGpH,KAAKP,MAAMmE,WACZ,OAAO,cAACyD,GAAD,CAAcnH,OAAQF,KAAKoF,aACbtB,aAAc9D,KAAKP,MAAMqE,aACzBwD,YAAatH,KAAKqF,aAClBE,WAAYvF,KAAKuF,WACjBgC,wBAAyBvH,KAAKP,MAAMuE,mBACpCC,2BAA4BjE,KAAKP,MAAMwE,2BACvCE,+BAAgCnE,KAAKP,MAAM0E,+BAC3CC,iCAAkCpE,KAAKP,MAAM2E,iCAC7CxC,WAAY5B,KAAKP,MAAMmC,aAG9C,IAAI4F,EAAU,GAERC,EAAoBzH,KAAK/C,MAAMkB,UAAUsJ,kBA4B/C,OAxBED,EADCxH,KAAKP,MAAMkE,kBAAoB8D,EAE9B,eAACnH,EAAA,EAAD,CAAOhD,QAAQ,UAAf,UACE,cAACgD,EAAA,EAAMG,QAAP,wBACA,uFACA,+CAAkBT,KAAK/C,MAAMkB,UAAUQ,QACvC,wFAC0D,IACvD8I,EAAkBC,QAAQC,SAAS,MAAM9I,YAKtC,cAAC+I,EAAD,CAAoBhG,WAAY5B,KAAKP,MAAMmC,WACvByC,aAAcrE,KAAKqE,aACnBG,iBAAkBxE,KAAKwE,iBACvBX,WAAY7D,KAAKP,MAAMoE,WACvBsB,cAAenF,KAAKmF,cACpB0C,QAAS7H,KAAK/C,MAAM4K,QACpBpE,eAAgBzD,KAAKP,MAAMgE,eAC3BC,iBAAkB1D,KAAKP,MAAMiE,iBAC7B2C,uBAAwBrG,KAAKqG,uBAC7ByB,kBAAmBV,IAIjD,qCACE,cAACpI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAK,6EAGNuI,GAEgB,IAAhBJ,EACC,cAACpI,EAAA,EAAD,CAAKtB,UAAU,oBAAf,SACE,eAACuB,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAQpC,QAASqC,KAAK/C,MAAM4K,QAAShJ,MAAM,4BAA4BwC,UAAWrB,KAAKP,MAAMkE,iBAA7F,qBACA,cAAC5D,EAAA,EAAD,CAAQpC,QAASqC,KAAK/C,MAAM4K,QAAShJ,MAAM,wBAAwBvB,QAAQ,YAA3E,yBAGH,UAvOX,GAAyC8C,IAAMC,WA+O/C,SAASuH,EAAmB3K,GAE1B,IAAIyG,EAAmB,GAUvB,OATGzG,EAAMwG,iBACPC,EACE,eAACpD,EAAA,EAAD,CAAOhD,QAAQ,SAASiD,QAAStD,EAAMoJ,uBAAwB7F,aAAW,EAA1E,UACE,cAACF,EAAA,EAAMG,QAAP,2BACA,4BAAI,GAAGxD,EAAMyG,uBAKhBzG,EAAM6K,kBAEL,cAAC9I,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACGyE,EACD,cAACqE,EAAD,eAAgB9K,SAOtB,eAAC+B,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKyB,GAAI,EAAT,UACE,gEACA,cAACX,EAAA,EAAD,CAAQzC,QAAQ,YACRK,QAASV,EAAM4K,QACfhJ,MAAM,qBAFd,yBAIF,eAACI,EAAA,EAAD,CAAKyB,GAAI,EAAT,UACE,kCACA,mCACA,qCAEF,eAACzB,EAAA,EAAD,CAAKyB,GAAI,EAAT,UACGgD,EACD,cAACqE,EAAD,eAAgB9K,UAMxB,SAAS8K,EAAW9K,GAElB,IAAI+K,EAAe,GASnB,OARG/K,EAAM4G,aACPmE,EACE,cAACjI,EAAA,EAAD,CAAQzC,QAAQ,YAAYK,QAASV,EAAMkI,cAA3C,sBAOF,qCACE,sEAEA,eAACxE,EAAA,EAAKC,MAAN,CAAYqH,UAAU,iBAAtB,UACE,cAACtH,EAAA,EAAKQ,MAAN,kCACA,cAACR,EAAA,EAAKuH,QAAN,CACEnH,KAAK,OACLC,KAAK,aACLnC,MAAO5B,EAAM2E,WACbuG,aAAa,QACblH,SAAUhE,EAAMoH,aAChB+D,YAAY,2BAGhB,eAACpJ,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WAEE,cAAC,IAAD,CAAUoJ,OAAQpL,EAAMuH,iBAAxB,SACG,gBAAE8D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,sBAAM7K,UAAU,+BAAhB,SACE,iDAAU4K,KAAV,cACE,qCAAWC,MACX,sBAAM7K,UAAU,gCAMvBsK,KAGH,cAAC/I,EAAA,EAAD,U,SAOOyF,E,2FAAf,WAA8BD,GAA9B,iGAE0BM,QAAQyD,IAAI/D,EAAcgE,IAAd,iDAAkB,WAAMC,GAAN,wFAClC,qBAAdA,EAAK3H,KAD2C,uBAE9C4H,EAAS,IAAIC,WAFiC,SAGtB,IAAI7D,SAAQ,SAACC,EAASC,GAChD0D,EAAOE,OAAS,WACd,IAAIC,EAASH,EAAOI,OACdC,EAAkBC,OAAOC,aAAaC,MAAM,KAAM,IAAIC,WAAWN,IACvE9D,EAAQ,CAACgE,oBAEXL,EAAOU,QAAU,SAAAC,GACfrE,EAAOqE,IAETX,EAAOY,kBAAkBb,MAZuB,cAG5Cc,EAH4C,OAelDvH,QAAQC,MAAMsH,GAERC,EAAcC,KAAKC,MAAMH,EAAcR,gBAjBK,kBAmB3CS,GAnB2C,2CAAlB,wDAFtC,cAEQ9E,EAFR,yBAyBSA,GAzBT,2C,yBA4BA,SAAS0C,GAAapK,GAkBpB,OAAO,uCA8CT,SAASkJ,GAAqBpC,GAE5B,IADA,IAAIP,EAAc,GAAIoG,EAAgB5D,OAAOC,KAAKlC,GAAca,OACvDiF,EAAI,EAAGA,GAAOD,EAAeC,IACpCrG,GAAeO,EAAa,GAAG8F,GAQjC,OAFArG,EAF0B,0CAEQA,EADV,0CAM1B,SAAS4C,GAAoBlC,GAE3B,IADA,IAAI5B,EAAa,GAAIsH,EAAgB5D,OAAOC,KAAK/B,GAAqBU,OAC7DiF,EAAI,EAAGA,GAAOD,EAAeC,IACpCvH,GAAc4B,EAAoB,GAAG2F,GAQvC,OAFAvH,EAF0B,gCAEOA,EADT,gCAMnB,SAASwH,GAAsB7M,GACpC,OAAGA,EAAMqF,WAEL,cAACtD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,wCAAWhC,EAAMqF,WAAWoF,QAAQC,SAAS,KAAK9I,SAClD,yCAAY5B,EAAMqF,WAAWoF,QAAQC,SAAS,MAAM9I,cAKrD,GCxdF,IAAMkL,GAAb,4JAEE,WACE,IACMC,EAAU,GAEhB,GAAGhK,KAAK/C,MAAMyF,IAAK,CACjB,IAAIuH,EAAYjK,KAAK/C,MAAMyF,IAAIwH,OAAOxE,MAAM,MACzCuE,EAAU,GAAGE,WAAW,SACzBF,EAAYA,EAAUG,MAAM,IAE9B,IAAMC,EAAgBJ,EAAUrF,OAAS,EACtCqF,EAAUI,GAAeF,WAAW,SACrCF,EAAYA,EAAUG,MAAM,EAAGC,IAOjC,IALA,IAAMC,EAAYL,EAAUM,KAAK,IAE3BC,EAAUC,KAAKC,KAAKJ,EAAU1F,OAdlB,KAeZ+F,EAAmBL,EAAU1F,OAAS4F,EAAUA,EAE9CX,EAAI,EAAGA,EAAMW,EAASX,IAAO,CACnC,IAAIe,EAAQf,EAAMc,EAAkBE,GAAOhB,EAAI,GAAKc,EACjDE,EAAMP,EAAU1F,SAAQiG,EAAMP,EAAU1F,QAC3C,IAAIkG,EAAUR,EAAUF,MAAMQ,EAAOC,GAErCC,EAAU9K,KAAK/C,MAAM8N,IAAM,KAAOlB,EAAI,GAAK,IAAMW,EAAU,KAAOM,EAClEd,EAAQgB,KACN,cAAC/L,EAAA,EAAD,CAAKgM,GAAI,EAAavN,UAAU,UAAhC,SACE,cAAC,IAAD,CAAQA,UAAU,SAASmB,MAAOiM,EAAShM,KAAM,OADlC+K,KAOvB,OACE,cAAC7K,EAAA,EAAD,UACGgL,QApCT,GAA+B5J,IAAMC,WA2CrC,SAAS6K,GAAWjO,GAClB,IAAIqF,EAAa,KAAMT,EAAY,KA4BnC,OA1BG5E,EAAMqF,aACPA,EACE,sBAAK5E,UAAU,MAAf,UACE,2CACA,cAAC,GAAD,CAAWgF,IAAKzF,EAAMqF,WAAYyI,IAAK9N,EAAM8N,IAAM,cAKtD9N,EAAM4E,YACPA,EACE,sBAAKnE,UAAU,UAAf,UACE,4BAAIT,EAAM0B,OAEV,cAAC2B,EAAA,EAAD,CAAOhD,QAAQ,UAAf,4EAIA,+DAEA,cAAC,GAAD,CAAWoF,IAAKzF,EAAM4E,UAAWkJ,IAAK9N,EAAM8N,IAAM,aAOtD,gCACGzI,EACAT,KAMA,SAASsJ,GAAelO,GAC7B,OAAGA,EAAMmO,kBAAoBnO,EAAM2E,YAAc3E,EAAMoO,kBAGnD,gCACE,eAACrM,EAAA,EAAD,CAAKtB,UAAU,aAAf,UACE,eAACuB,EAAA,EAAD,CAAKqM,GAAI,EAAT,UACE,cAACxN,EAAA,EAAD,qCACA,4BAAIb,EAAM2E,gBAEZ,cAAC3C,EAAA,EAAD,CAAKqM,GAAI,EAAT,SACE,cAAC,IAAD,CAAQzM,MAAO5B,EAAM2E,WAAY9C,KAAM,UAI3C,qBAAKpB,UAAU,aAAf,SACE,cAACwN,GAAD,CACE5I,WAAYrF,EAAMmO,iBAClBvJ,UAAW5E,EAAMoO,kBACjBN,IAAI,SACJpM,KAAM1B,EAAM0B,YAMb,wBCzGJ,IAAM4M,GAAb,4MAEE9L,MAAQ,CACN+L,sBAAsB,EACtBC,kBAAmB,GAEnBC,kBAAkB,EAClBC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,6BAA6B,EAE7BlN,KAAM,GACNmN,gBAAgB,EAChBtJ,QAAS,GACTb,aAAc,GACdkB,cAAe,GAEfkJ,IAAK,IAjBT,EA2CEC,yBAA2B,SAAAC,GACzB,EAAKpM,SAAS,CAACoM,8BA5CnB,EA+CEC,2BAA6B,SAAAC,GAC3B,EAAKtM,SAAS,CAACsM,gCAhDnB,EAmDEC,cAAgB,SAAAxM,GACd,EAAKC,SAAS,CAACiM,gBAAgB,KApDnC,EAuDEO,SAAW,SAAAzM,GACT0M,OAAOC,QACP,EAAK1M,SAAS,CAACiM,gBAAgB,KAzDnC,uDAoBE,WAAqB,IAAD,OACZ9L,KAAKP,MAAM+L,sBH4Cd,WAAP,+BG1CMgB,GACCjG,MAAM,SAAAkF,GAELxJ,QAAQC,MAAM,0BAA2BuJ,GAEzC,EAAK5L,SAAS,CACZ2L,sBAAsB,EACtB7M,KAAM8M,EAAkB9M,KACxB6D,QAASiJ,EAAkBjJ,QAC3Bb,aAAc8J,EAAkB9J,aAChCkB,cAAe4I,EAAkB5I,mBAGpC4J,OAAM,SAAAnD,GACLrH,QAAQqD,MAAM,iDAAkDgE,QArCxE,oBA4DE,WAEE,OACE,cAACoD,GAAD,2BACM1M,KAAK/C,OADX,IAEE0P,wBAAyB3M,KAAK2M,wBAC9BN,SAAUrM,KAAKqM,SACfxE,QAAS7H,KAAK/C,MAAM4K,QACpBrF,QAASxC,KAAKP,MAAM+C,QACpBb,aAAc3B,KAAKP,MAAMkC,aACzBkB,cAAe7C,KAAKP,MAAMoD,cAC1BlE,KAAMqB,KAAKP,MAAMd,KACjByN,cAAepM,KAAKoM,cACpBN,eAAgB9L,KAAKP,MAAMqM,sBAzEnC,GAAwC1L,IAAMC,WAiF9C,SAASqM,GAAWzP,GAElB,IAAI2P,EAAiB,KAErB,GAAG3P,EAAM0B,KAAM,CACb,IAAOkO,EC7FJ,SAAgClO,EAAMyM,EAAkBC,GAC7D,IAAMyB,EAAc,CAClBnO,QAIImG,EAAS,CACbxC,WAAY8I,EACZ5H,YAAa6H,GAEfyB,EAAYhI,OAASA,EACrB,IAAMiI,EAAgBrD,KAAKsD,UAAUF,GAE/BG,EAAc,IAAIC,KAAK,CAACH,GAAgB,CAAChM,KAAM,qBAErD,MAAO,CAAC8L,QADMP,OAAOa,IAAIC,gBAAgBH,ID+ErBI,CAChBpQ,EAAM0B,KACN1B,EAAMuF,QACNvF,EAAM0E,cAHDkL,QAMHS,EAAkB,aAAerQ,EAAM0B,KAAO,QAClDiO,EACE,cAAC7M,EAAA,EAAD,CAAQ7B,KAAM2O,EAASU,SAAUD,EAAiB3P,QAASV,EAAMmP,cAAe9O,QAAQ,oBAAxF,6BAIJ,OACE,eAACoB,EAAA,EAAD,WAEE,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKvB,UAAU,cAAf,SACE,iEAIJ,eAAC4C,EAAA,EAAD,CAAOhD,QAAQ,UAAf,UACE,2HAKA,kGAGF,0CAAaL,EAAM0B,QAEnB,cAACwM,GAAD,CACEhN,UAAWlB,EAAMkB,UACjBiN,iBAAkBnO,EAAMuF,QACxBZ,WAAY3E,EAAM4F,cAClBwI,kBAAmBpO,EAAM0E,aACzBhD,KAAM1B,EAAM0B,OAGd,sBAAKjB,UAAU,SAAf,UACE,cAACsB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,wHAKF,cAACD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAQpC,QAASV,EAAMoP,SAAU/O,QAAQ,oBAAzC,sBACCsP,OAIL,cAAC5N,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKvB,UAAU,oBAAf,UACE,cAACqC,EAAA,EAAD,CAAQpC,QAASV,EAAM4K,QAAShJ,MAAM,sBAAsBwC,UAAWpE,EAAM6O,eAA7E,qBACA,cAAC/L,EAAA,EAAD,CAAQpC,QAASV,EAAM4K,QAAShJ,MAAM,GAAGvB,QAAQ,YAAjD,+B,wBEnJNkQ,GAAa,oDAENC,GAAb,4MACEhO,MAAQ,CACNiO,oBAAoB,EAEpBC,QAAS,EAAK1Q,MAAM2Q,YACpBC,cAAeL,GAAWM,KAAK,EAAK7Q,MAAM2Q,aAC1CG,qBAAsB,GAEtBC,sBAAsB,EACtBC,UAAU,EACVC,aAAc,UAEdC,kBAAmB,GACnBC,iBAAkB,GAClBC,SAAU,MAEVC,gBAAgB,GAhBpB,EAuBEC,sBAAwB,SAAA3O,GACtBqC,QAAQC,MAAM,+BAAgCtC,GAC9C,IAAM4O,EAAY5O,EAAM0E,cACxBrC,QAAQC,MAAM,wCAAyCsM,GACvD,EAAK3O,SAAS,CAAC6N,mBAAwC,SAApBc,EAAU3P,SA3BjD,EA8BE4P,eAAiB,SAAA7O,GACf,IAAOf,EAASe,EAAM0E,cAAfzF,MACD6P,EAASlB,GAAWM,KAAKjP,GAC/B,EAAKgB,SAAS,CAAC8N,QAAS9O,EAAOgP,cAAea,KAjClD,EAoCEC,iBAAmB,SAAA/O,GACjB,MAAsBA,EAAM0E,cAArBtD,EAAP,EAAOA,KAAMnC,EAAb,EAAaA,MACb,EAAKgB,SAAL,eAAgBmB,EAAOnC,KAtC3B,EAyCE+P,YAAc,SAAAhP,GACZ,MAAwBA,EAAM0E,cAAvBtD,EAAP,EAAOA,KAAM6N,EAAb,EAAaA,QACb,EAAKhP,SAAL,eAAgBmB,EAAO6N,KA3C3B,EA8CEC,gBAAkB,SAAAlP,GAChB,IAAOf,EAASe,EAAM0E,cAAfzF,MACP,EAAKgB,SAAS,CAACqO,aAAcrP,IAAQ,WAAKoD,QAAQC,MAAM,cAAe,EAAKzC,WAhDhF,EAmDEsP,kBAAoB,SAAAnP,GAElB,IAAMoP,EAAM,eAAO,EAAKvP,OACrBuP,EAAOjB,uBAAsBiB,EAAOjB,qBAAuBiB,EAAOjB,qBAAqBrI,MAAM,KAAK+C,KAAI,SAAAwG,GAAI,OAAEA,EAAK/E,WACpH,EAAKjN,MAAMkB,UAAU+Q,gBAAgBF,GACrC,EAAK/R,MAAM4K,QAAQ,CAACvD,cAAe,CAACzF,MAAM,sBAxD9C,EA2DEsQ,kBAAoB,SAAAvP,GAClB,EAAKC,SAAS,CAACyO,gBAAgB,KA5DnC,uDAmBE,WACErM,QAAQC,MAAM,aAAclC,KAAK/C,SApBrC,oBA+DE,WAEE,OACE,cAACmS,GAAD,CACEjR,UAAW6B,KAAK/C,MAAMkB,UACtBwP,QAAS3N,KAAKP,MAAMkO,QACpBE,cAAe7N,KAAKP,MAAMoO,cAC1BH,mBAAoB1N,KAAKP,MAAMiO,mBAC/Be,eAAgBzO,KAAKyO,eACrBE,iBAAkB3O,KAAK2O,iBACvBJ,sBAAuBvO,KAAKuO,sBAC5BK,YAAa5O,KAAK4O,YAClBZ,qBAAsBhO,KAAKP,MAAMuO,qBACjCC,SAAUjO,KAAKP,MAAMwO,SACrBE,kBAAmBnO,KAAKP,MAAM0O,kBAC9BC,iBAAkBpO,KAAKP,MAAM2O,iBAC7BC,SAAUrO,KAAKP,MAAM4O,SACrBS,gBAAiB9O,KAAK8O,gBACtBZ,aAAclO,KAAKP,MAAMyO,aACzBa,kBAAmB/O,KAAK+O,wBAlFhC,GAA+C3O,IAAMC,WAmHrD,SAAS+O,GAA8BnS,GAErC,OACE,eAACyB,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,6EAIJ,cAAC0B,EAAA,EAAKC,MAAN,UACE,eAACD,EAAA,EAAKE,MAAN,CAAY5C,GAAG,wBAAf,UACE,cAAC0C,EAAA,EAAKE,MAAMC,MAAZ,CAAkBC,KAAK,WACLC,KAAK,sBACLnC,MAAM,OACNoC,SAAUhE,EAAMsR,sBAChBM,QAAS5R,EAAMyQ,qBACjC,cAAC/M,EAAA,EAAKE,MAAMM,MAAZ,2CAIJ,cAACkO,GAAD,eAA0BpS,IAE1B,cAAC+B,EAAA,EAAD,CAAKtB,UAAU,oBAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAACc,EAAA,EAAD,CAAQpC,QAASV,EAAM8R,kBAAmBlQ,MAAM,OAAOwC,UAAWpE,EAAM4Q,cAAxE,4BAQV,SAASwB,GAAqBpS,GAE5B,IAAIA,EAAMyQ,mBAAoB,MAAO,GAOrC,IAAIM,EAAuB,GAC3B,GAAG/Q,EAAM+Q,qBAAsB,CAC7B,IAAIsB,EAAgB,GACO,gBAAvBrS,EAAMiR,eACRoB,EACE,gCACE,uBAAOC,QAAQ,gBAAf,mCACA,eAACC,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,KAAZ,CAAiBxR,GAAG,gBAApB,4BAGA,cAACyR,GAAA,EAAD,CAAazR,GAAG,gBACH,mBAAiB,gBACjB+C,KAAK,oBACLnC,MAAO5B,EAAMkR,kBACblN,SAAUhE,EAAM0R,sBAE/B,eAACa,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,KAAZ,CAAiBxR,GAAG,mBAApB,0BAGA,cAACyR,GAAA,EAAD,CAAazR,GAAG,mBACH,mBAAiB,mBACjB8C,KAAK,WACLC,KAAK,mBACLnC,MAAO5B,EAAMmR,iBACbnN,SAAUhE,EAAM0R,sBAG/B,eAACa,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,KAAZ,CAAiBxR,GAAG,YAApB,uBAGA,cAACyR,GAAA,EAAD,CAAazR,GAAG,YACH,mBAAiB,YACjB+C,KAAK,WACLnC,MAAO5B,EAAMoR,SACbpN,SAAUhE,EAAM0R,0BAOrCX,EACE,gCAEE,eAACwB,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,KAAZ,CAAiBxR,GAAG,wBAApB,mCAGA,cAACyR,GAAA,EAAD,CACEzR,GAAG,wBACH,mBAAiB,wBACjB+C,KAAK,uBACLnC,MAAO5B,EAAM8Q,qBACb9M,SAAUhE,EAAM0R,sBAGpB,eAAChO,EAAA,EAAKE,MAAN,CAAY5C,GAAG,kBAAf,UACE,cAAC0C,EAAA,EAAKE,MAAMC,MAAZ,CAAkBC,KAAK,WAAWC,KAAK,WAAWnC,MAAM,OAAOoC,SAAUhE,EAAM2R,YAAaC,QAAS5R,EAAMgR,WAC3G,cAACtN,EAAA,EAAKE,MAAMM,MAAZ,oCAGF,eAACR,EAAA,EAAKC,MAAN,CAAYqH,UAAU,yBAAtB,UACE,cAACtH,EAAA,EAAKQ,MAAN,0CACA,eAACR,EAAA,EAAKuH,QAAN,CAAcyH,GAAG,SAAS9Q,MAAO5B,EAAMiR,aAAcjN,SAAUhE,EAAM6R,gBAArE,UACE,wBAAQjQ,MAAM,UAAd,iCACA,wBAAQA,MAAM,cAAd,2BAIHyQ,KAKP,OACE,qCACE,cAACtQ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,yDAEA,+BACE,gDACA,sFAGF,uEACyChC,EAAM2S,mBAMnD,cAAC5Q,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,mDAGJ,eAAC0B,EAAA,EAAD,WACE,wBAAO4O,QAAQ,YAAf,kCAAiDtS,EAAM4S,uBACvD,eAACL,GAAA,EAAD,CAAY9R,UAAU,OAAtB,UACE,cAAC8R,GAAA,EAAWC,KAAZ,CAAiBxR,GAAG,eAApB,sBAGA,cAACyR,GAAA,EAAD,CAAazR,GAAG,YAAY,mBAAiB,eAAeY,MAAO5B,EAAM0Q,QAAS1M,SAAUhE,EAAMwR,oBAGpG,eAAC9N,EAAA,EAAKE,MAAN,CAAY5C,GAAG,wBAAf,UACE,cAAC0C,EAAA,EAAKE,MAAMC,MAAZ,CAAkBC,KAAK,WAAWC,KAAK,uBAAuBnC,MAAM,OAAOoC,SAAUhE,EAAM2R,YAAaC,QAAS5R,EAAM+Q,uBACvH,cAACrN,EAAA,EAAKE,MAAMM,MAAZ,uCAGD6M,QChRF,IAAM8B,GAAb,4MAEErQ,MAAQ,CACN6J,IAAK,GACLyG,SAAS,GAJb,EAOEC,WAAa,SAAApQ,GAGX,IAAMqQ,EAA6B,EAAKhT,MAAMkB,UAAU8R,2BAClD5N,EAAyB,EAAKpF,MAAMkB,UAAUkE,uBAE9C6N,EAAqB,CACzBxO,cAAeuO,EAA2BvN,IAC1CyN,UAAW,CAACF,EAA2BvN,IAAKL,EAAuBC,YACnE8N,SAAU,aAGZnO,QAAQC,MAAM,8CAA+CgO,GAE7DpJ,IAAMuJ,KAAK,mCAAoCH,GAC9C3J,MAAK,SAAA+J,GACJrO,QAAQC,MAAM,gDAAiDoO,GAC/D,EAAKzQ,SAAS,CAACkQ,SAAS,IACxBQ,YAAW,SAAAhM,GAAI+H,OAAOkE,SAASC,WAAW,SAE3ChE,OAAM,SAAAnD,GACLrH,QAAQqD,MAAM,0CAA2CgE,GACzD,EAAKzJ,SAAS,CAACyJ,IAAK,GAAGA,QA7B7B,4CAkCE,WAEE,IAAIoH,EACF,eAACpQ,EAAA,EAAD,CAAOhD,QAAQ,UAAf,UACE,cAACgD,EAAA,EAAMG,QAAP,kCACA,qEAGA,kGAoBJ,OAfGT,KAAKP,MAAM6J,IACZoH,EACE,eAACpQ,EAAA,EAAD,CAAOhD,QAAQ,SAAf,UACE,cAACgD,EAAA,EAAMG,QAAP,kCACA,4BAAIT,KAAKP,MAAM6J,SAGXtJ,KAAKP,MAAMsQ,UACnBW,EACE,cAACpQ,EAAA,EAAD,CAAOhD,QAAQ,OAAf,SACE,wDAMJ,gCACGoT,EAED,cAAC1R,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACc,EAAA,EAAD,CAAQpC,QAASqC,KAAKgQ,WAAY3O,SAAUrB,KAAKP,MAAMsQ,QAAvD,mCApEZ,GAA4C3P,IAAMC,WCDrCsQ,GAAb,4MAEElR,MAAQ,CACNd,KAAM,IAHV,EAaE0F,aAAe,SAAAzE,GACb,MAAsBA,EAAM0E,cAArBtD,EAAP,EAAOA,KAAMnC,EAAb,EAAaA,MACb,EAAKgB,SAAL,eAAgBmB,EAAOnC,KAf3B,EAkBE+R,QAAU,SAAAhR,GACRqC,QAAQC,MAAM,aAAc,EAAKjF,OACjC,EAAKA,MAAM4T,QAAQ,EAAKpR,MAAMd,MAC9B,EAAK1B,MAAM4K,QAAQjI,IArBvB,uDAME,WACKI,KAAK/C,MAAMkB,UAAUQ,OACtBsD,QAAQC,MAAM,0DAA2DlC,KAAK/C,MAAMkB,UAAUQ,MAC9FqB,KAAK/C,MAAM4K,QAAQ,CAACvD,cAAe,CAACzF,MAAO,wBATjD,oBAwBE,WAOE,OACE,qCACE,iDAEA,qGAEA,cAACiS,GAAD,CAAUnS,KAAMqB,KAAKP,MAAMd,KACjB0F,aAAcrE,KAAKqE,eAE7B,cAACrF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAQpC,QAASqC,KAAK4Q,QAAS/R,MAhBpB,kBAgBX,qBACA,cAACkB,EAAA,EAAD,CAAQzC,QAAQ,YAAhB,gCA3CZ,GAAyC8C,IAAMC,WAoD/C,SAASyQ,GAAS7T,GAChB,OACE,eAACuS,GAAA,EAAD,CAAY9R,UAAU,OAAtB,UACE,cAAC8R,GAAA,EAAWC,KAAZ,CAAiBxR,GAAG,OAApB,2BAGA,cAACyR,GAAA,EAAD,CAAazR,GAAG,OACH,mBAAiB,OACjB+C,KAAK,OACLnC,MAAO5B,EAAM0B,KACbsC,SAAUhE,EAAMoH,kB,yBC1DtB0M,GAAb,4JAEE,WACE9O,QAAQC,MAAM,6BAA8BlC,KAAK/C,OACjD,IAAMqE,EAAYtB,KAAK/C,MAAMqE,UAI7B,OAAGtB,KAAK/C,MAAMkB,UAAUuP,mBAIpB,cAAC,GAAD,eAAqC1N,KAAK/C,QAEtB,YAAdqE,EAEN,cAAC0P,GAAD,eAA2BhR,KAAK/C,QAEZ,UAAdqE,EAEN,cAAC2P,GAAD,eAA0BjR,KAAK/C,QAEX,WAAdqE,EAEN,cAAC4P,GAAD,eAA2BlR,KAAK/C,QAG5B,cAACqD,EAAA,EAAD,CAAOhD,QAAQ,SAAf,oCA3BZ,GAAqC8C,IAAMC,WA+B3C,SAAS4Q,GAAqBhU,GAE5B,IAWM0B,EAAO1B,EAAM0B,KAEnB,OACE,qCACE,4DAEA,6CACA,wCAAWA,KAEX,cAACK,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKvB,UAAU,SAAf,UACE,cAACqC,EAAA,EAAD,CAAQpC,QAtBE,SAAAiC,GAChBuR,GAAqBlU,EAAO,IAAI,SAAAqM,GAC3BA,EACDrH,QAAQqD,MAAM,0CAA2CgE,GAI3DiH,YAAW,SAAAhM,GAAI+H,OAAOkE,SAASC,WAAW,SAeV5R,MAAM,OAAlC,mCACA,cAACkB,EAAA,EAAD,CAAQpC,QAASV,EAAMmU,UAAWvS,MAAM,QAAQvB,QAAQ,YAAxD,+BAQV,SAAS4T,GAAsBjU,GAC7B,IAWM0B,EAAO1B,EAAM0B,KAEnB,OACE,qCACE,4DAEA,8CACA,wCAAWA,KAEX,cAACK,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKvB,UAAU,SAAf,UACE,cAACqC,EAAA,EAAD,CAAQpC,QAtBE,SAAAiC,GAChByR,GAAsBpU,EAAO,IAAI,SAAAqM,GAC5BA,EACDrH,QAAQqD,MAAM,0CAA2CgE,GAI3DiH,YAAW,SAAAhM,GAAI+H,OAAOkE,SAASC,WAAW,SAeV5R,MAAM,OAAlC,mCACA,cAACkB,EAAA,EAAD,CAAQpC,QAASV,EAAMmU,UAAWvS,MAAM,QAAQvB,QAAQ,YAAxD,+BAOV,SAAS0T,GAAsB/T,GAE7B,IAYMwK,EAAoBxK,EAAMkB,UAAUsJ,kBAE1C,OACE,eAAC/I,EAAA,EAAD,WACE,4DAEA,qDACA,cAACoL,GAAD,CAAuBxH,WAAYmF,IAEnC,cAACzI,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKvB,UAAU,SAAf,UACE,cAACqC,EAAA,EAAD,CAAQpC,QAvBE,SAAAiC,GAChB0R,GAAsBrU,EAAO,IAAI,SAAAqM,GAC5BA,EACDrH,QAAQqD,MAAM,0CAA2CgE,IAG3DrH,QAAQC,MAAM,6CAEdqO,YAAW,SAAAhM,GAAI+H,OAAOkE,SAASC,WAAW,WAeV5R,MAAM,OAAlC,mCACA,cAACkB,EAAA,EAAD,CAAQpC,QAASV,EAAMmU,UAAWvS,MAAM,QAAQvB,QAAQ,YAAxD,+B,IAQJiU,G,4MAEJ9R,MAAQ,CACN+R,sBAAsB,EACtBC,kBAAkB,EAClBC,gBAAgB,EAChBC,qBAAqB,EAErBC,QAAQ,EACRC,cAAe,GACfC,YAAa,I,EASfC,e,gCAAiB,uGACf,EAAKlS,SAAS,CACZ2R,sBAAsB,EACtBC,kBAAkB,EAClBC,gBAAgB,EAChBM,6BAA8B,EAC9BC,kCAAmC,EAEnCL,QAAQ,EACRC,cAAe,GACfC,YAAa,KAII,yBAIbI,EAAgBpL,IAAMqL,OAAO,CACjCC,QAAS,IACTC,WAAY,IAAIC,KAAMC,MAAM,CAAEC,WAAW,EAAMC,oBAAoB,MApBtD,kBAwBaP,EAAcnL,IAVvB,0BAdJ,OAwBP2L,EAxBO,OAyBbzQ,QAAQC,MAAM,mBAAoBwQ,GAClC,EAAK7S,SAAS,CAAC2R,sBAAsB,IAAO,WAC1C,EAAKzC,uBA3BM,kDA8Bb9M,QAAQqD,MAAM,uBAAd,MACA,EAAKzF,SAAS,CAAC+R,QAAQ,EAAMC,cAAe,KAAIc,QAASb,YAAa,KAAIc,QA/B7D,0D,EAkFjBC,sB,gCAAwB,2FACtB5Q,QAAQC,MAAM,oCAEX,EAAKzC,MAAMuS,6BAA+B,IAHvB,uBAKpB,EAAKnS,SAAS,CAAC+R,QAAQ,EAAMC,cAAc,mCALvB,iCAStB5P,QAAQC,MAAM,0BATQ,kBAWE4E,IAAMC,IAAI,uCAXZ,cAYRvB,KAAKsN,MAKf7Q,QAAQC,MAAM,mBACd,EAAKrC,SAAS,CAAC6R,gBAAgB,IAAO,WAEpCnB,WAAW,EAAKwC,2BAA4B,WAP9C9Q,QAAQC,MAAM,6BACd,EAAKrC,SAAS,CAACmS,6BAA8B,EAAKvS,MAAMuS,6BAA+B,IACvFzB,WAAW,EAAKsC,sBAAuB,MAfrB,kDAwBpB5Q,QAAQqD,MAAM,mCAAd,MACA,EAAKzF,SAAS,CAAC+R,QAAQ,EAAMC,cAAe,KAAIc,QAASb,YAAa,KAAIc,QAzBtD,0D,EA8BxBG,2B,gCAA6B,2FAC3B9Q,QAAQC,MAAM,yCAEX,EAAKzC,MAAMwS,kCAAoC,IAHvB,uBAKzB,EAAKpS,SAAS,CAAC+R,QAAQ,EAAMC,cAAc,gCALlB,iCAS3B5P,QAAQC,MAAM,2BATa,kBAWnB4E,IAAMC,IAAI,uCAXS,OAYzB9E,QAAQC,MAAM,mBACd,EAAKrC,SAAS,CAAC8R,qBAAqB,IAAO,WAEzC,EAAKqB,4BAfkB,kDAkBzB/Q,QAAQqD,MAAM,6CAAd,MACAiL,WAAW,EAAKwC,2BAA4B,KAC5C,EAAKlT,SAAS,CAACoS,kCAAmC,EAAKxS,MAAMwS,kCAAoC,IApBxE,0D,EAyB7Be,uB,gCAAyB,wFACvB/Q,QAAQC,MAAM,2BADS,2C,uDA9IzB,WAEElC,KAAK+R,mB,gFAuCP,yGACQkB,EAAejT,KAAK/C,MAAMkB,UAAU8U,aAC1ChR,QAAQC,MAAM,2BAA4B+Q,GAEpCC,EAAgB,CACpBvF,QAASsF,EAAatF,QACtBM,SAAUgF,EAAahF,UAGM,gBAA5BjO,KAAK/C,MAAMiR,eACZgF,EAAa,aAAmBD,EAAa/E,aAC7CgF,EAAa,aAAmBD,EAAaE,aAC7CD,EAAa,gBAAsBD,EAAaG,iBAGlD,IAIQC,EAAW,SAAA/J,GACf,GAAGA,EAGD,OAFArH,QAAQqD,MAAM,0CAA2CgE,QACzD,EAAKzJ,SAAS,CAACyJ,IAAK,GAAGA,IAGzB,EAAKzJ,SAAS,CAAC4R,kBAAkB,IAAO,WAEtC,EAAKoB,4BAImB,YAAzB7S,KAAK/C,MAAMqE,UACZgQ,GAAsBtR,KAAK/C,MAAOiW,EAAeG,GAChB,UAAzBrT,KAAK/C,MAAMqE,UACnB6P,GAAqBnR,KAAK/C,MAAOiW,EAAeG,GACf,WAAzBrT,KAAK/C,MAAMqE,WACnB+P,GAAsBrR,KAAK/C,MAAOiW,EAAeG,GAGnD,MAAM/J,GACNrH,QAAQqD,MAAM,mCAAoCgE,GAClDtJ,KAAKH,SAAS,CAAC+R,QAAQ,EAAMC,cAAevI,EAAIqJ,QAASb,YAAaxI,EAAIsJ,QAzC9E,gD,0EAyGA,WAEE,IAAMU,EAAS,GACXC,EAAU,GAEZA,EADCvT,KAAKP,MAAMmS,OACF,mBAAGlU,UAAU,yCAEb,mBAAiBA,UAAU,sCAApB,WAEnB,IAAM8V,EAAU,mBAAiB9V,UAAU,sDAApB,WAEjB+V,EAAWzT,KAAKP,MAAM+R,qBAAqBgC,EAAQD,EAGzD,GAFAD,EAAOtI,KAAK,4DAAuChL,KAAK/C,MAAM0Q,QAAlD,IAA4D8F,IAApD,MAEjBzT,KAAKP,MAAM+R,qBAAsB,CAClC,IAAMkC,EAA2B1T,KAAKP,MAAMgS,iBAAiB+B,EAAQD,EACrED,EAAOtI,KAAK,2DAAsC0I,IAA9B,MAEtB,GAAG1T,KAAKP,MAAMgS,iBAAkB,CAC9B,IAAMkC,EAAuB3T,KAAKP,MAAMiS,eAAe8B,EAAQD,EAC/DD,EAAOtI,KAAK,kEAA6C2I,IAArC,MAEnB3T,KAAKP,MAAMiS,gBACZ4B,EAAOtI,KAAK,gEAA2CwI,IAAnC,MAGtB,IAAIhV,EAAO,GASX,OARGwB,KAAKP,MAAMmS,SACZpT,EAAO,cAACoV,GAAD,aACCjG,QAAS3N,KAAK/C,MAAM0Q,QACpBkG,OAAQ7T,KAAK/C,MAAM4W,OACnBC,UAAW9T,KAAK+R,gBACZ/R,KAAKP,SAIjB,qCACE,4DACA,6BACG6T,IAEF9U,S,GAzMqC4B,IAAMC,WA+MpD,SAASuT,GAAwB3W,GAC/B,OACE,qCACE,eAACqD,EAAA,EAAD,CAAOhD,QAAQ,SAAf,UACE,cAACgD,EAAA,EAAMG,QAAP,qDACA,2CAAcxD,EAAM0Q,WACpB,uBACA,4BAAI1Q,EAAM4U,mBAEZ,cAAC7S,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAQpC,QAASV,EAAM4W,OAAvB,oBACA,cAAC9T,EAAA,EAAD,CAAQpC,QAASV,EAAM6W,UAAvB,+B,SAOKxC,G,+FAAf,WAAqCrU,EAAO8W,EAAQV,GAApD,uFACEpR,QAAQC,MAAM,kCAAmCjF,GAE3C0B,EAAO1B,EAAM0B,MAAQ1B,EAAMkB,UAAUQ,KACrCqV,EAAmB/W,EAAMkB,UAAU6V,iBACnC/H,EAA2BhP,EAAMkB,UAAUkE,uBAAuBC,WAmBpE4N,EAxBN,2BAyBO6D,GAzBP,IA4BIpV,OAEAsV,sBAAuBhI,EACvBiI,wBAAyBF,EACzB5D,SAAU,cAGTnT,EAAMkB,UAAU8U,eAEjB/C,EAAkB,2BAAOjT,EAAMkB,UAAU8U,cAAiB/C,IAG5DpJ,IAAMuJ,KAAK,8BAA+BH,GACzC3J,MAAK,SAAA4N,GACJlS,QAAQC,MAAM,gDAAiDiS,GAC/Dd,OAED5G,OAAM,SAAAnD,GACLrH,QAAQqD,MAAM,0CAA2CgE,GACzD+J,EAAS/J,MA/Cb,4C,+BAoDe6H,G,+FAAf,WAAoClU,EAAO8W,EAAQV,GAAnD,mFAEQJ,EAAehW,EAAMkB,UAAU8U,aAEjC/C,EAJN,2BAKO6D,GALP,IAMIpV,KAAM1B,EAAM0B,KACZyR,SAAU,YAEZnO,QAAQC,MAAM,uDAAwDgO,GAEnE+C,IAED/C,EAAkB,2BAAOjT,EAAMkB,UAAU8U,cAAiB/C,IAG5DpJ,IAAMuJ,KAAK,mCAAoCH,GAC9C3J,MAAK,SAAA4N,GACJlS,QAAQC,MAAM,gDAAiDiS,GAC/Dd,OAED5G,OAAM,SAAAnD,GACLrH,QAAQqD,MAAM,0CAA2CgE,GACzD+J,EAAS/J,MAvBb,4C,+BA4Be+H,G,+FAAf,WAAqCpU,EAAO8W,EAAQV,GAApD,iFAEQnD,EAFR,2BAGO6D,GAHP,IAIIpV,KAAM1B,EAAM0B,KACZyR,SAAU,aAEZnO,QAAQC,MAAM,wDAAyDgO,GAEvEpJ,IAAMuJ,KAAK,mCAAoCH,GAC9C3J,MAAK,SAAA4N,GACJlS,QAAQC,MAAM,uDAAwDiS,GACtEd,OAED5G,OAAM,SAAAnD,GACLrH,QAAQqD,MAAM,iDAAkDgE,GAChE+J,EAAS/J,MAhBb,4C,sBC5aA,IAAMkE,GAAa,oDACb4G,GAAgB,CACpB5U,wBACA+D,sBACAgI,sBACAkC,6BACAqC,0BACAiB,mBACAJ,wBAGW0D,GAAb,4MAEE5U,MAAQ,CACN6U,oBAAoB,EACpBC,aAAa,EAEb5G,QAAS,GACTrM,UAAW,GAEX9C,KAAM,wBAENoP,YAAa,GACbjP,KAAM,IAZV,EAyEEkJ,QAAU,SAAAjI,GACR,IAAMpB,EAAOoB,EAAM0E,cAAczF,MACjCoD,QAAQC,MAAM,YAAa1D,GAC3B,EAAKqB,SAAS,CAACrB,UA5EnB,EA+EE0C,aAAe,SAAAtB,GACb,EAAKC,SAAS,CAACyB,UAAW1B,EAAM0E,cAAczF,SAhFlD,EAmFEgS,QAAU,SAAAlS,GACR,EAAKkB,SAAS,CAAClB,UApFnB,EAuFEyC,6BAA+B,SAAAxB,GAE7BqC,QAAQC,MAAM,wBAAyB,EAAKzC,OAChB,YAAzB,EAAKA,MAAM6B,UACZ,EAAKzB,SAAS,CAACrB,KAAM,wBACb,CAAC,QAAS,UAAUgW,SAAS,EAAK/U,MAAM6B,YAChD,EAAKzB,SAAS,CAACrB,KAAM,yBA7F3B,uDAeE,WAAqB,IAAD,OAElBsI,IAAMC,IAAI,0BACTR,MAAK,SAAA4N,GACJlS,QAAQC,MAAM,oBAAqBiS,GACnC,IAAMM,EAAcN,EAAQ3O,KAEtBkP,EAAO,CACX/V,KAAM8V,EAAY9V,KAClBgP,QAAS8G,EAAY9G,QACrByC,SAAUqE,EAAYrE,SACtBuE,QAASF,EAAYG,YACrBtS,WAAYmS,EAAYnS,WACxBuS,GAAIJ,EAAYI,IAGdvT,EAAY,EAAK7B,MAAM6B,UACxBoT,EAAKtE,WACN9O,EAAYoT,EAAKtE,SAAS1K,MAAM,KAAK,IAGvC,EAAKzI,MAAMkB,UAAU2W,QAAQJ,GAE7B,IAAIK,EAAiBzI,OAAOkE,SAASwE,SAC/BxH,GAAWM,KAAKiH,KACpBA,EAAiBN,EAAYQ,cAI/B,IAAIzW,EAAO,EAAKiB,MAAMjB,KAChBkW,EAAKtE,SAGEsE,EAAK/V,MAA0B,cAAlB+V,EAAKtE,SAGlBsE,EAAK/V,KAEL+V,EAAK/G,UAChB1L,QAAQC,MAAM,yCACd1D,EAAO,6BAHPA,EAAO,uBAHPyD,QAAQC,MAAM,6BACd1D,EAAO,wBAJPyD,QAAQC,MAAM,mCACd1D,EAAO,yBAWT,EAAKqB,SAAS,CACZyU,oBAAoB,EACpBC,aAAa,EACb3G,YAAamH,EACbnF,WAAY6E,EAAYS,YACxBvH,QAAS8G,EAAY9G,QACrBnP,OAAM8C,iBAGTmL,OAAM,SAAAnD,GACLrH,QAAQqD,MAAM,kCAAmCgE,GACjD,EAAKzJ,SAAS,CAACyU,oBAAoB,EAAOC,aAAa,SArE7D,oBAkGE,WAEE,GADAtS,QAAQC,MAAM,8BAA+BlC,KAAKP,OAC/CO,KAAKP,MAAM6U,mBAAoB,CAEhC,IAAIa,EAAO3V,EAgBX,OAdGQ,KAAKP,MAAMjB,OACZ2W,EAAOf,GAAcpU,KAAKP,MAAMjB,OAIhC,cAAC2W,EAAD,aAAMhX,UAAW6B,KAAK/C,MAAMkB,UACtB0J,QAAS7H,KAAK6H,QACd3G,aAAclB,KAAKkB,aACnB2P,QAAS7Q,KAAK6Q,QACdtC,sBAAuBvO,KAAKuO,sBAC5BnN,6BAA8BpB,KAAKoB,8BAC/BpB,KAAKP,QAKjB,OAAO,cAAC2V,GAAD,QAxHb,GAAkChV,IAAMC,WA+HxC,SAAS+U,GAAYnY,GACnB,OACE,oDCnJW,SAASoY,GAA4BpY,GAElD,MAAsBqY,mBAAS,IAA/B,mBAAO1O,EAAP,KAAY2O,EAAZ,KAEQvB,EAAqB/W,EAAMkB,UAA3B6V,iBAEFtS,EADyBzE,EAAMkB,UAAUkE,uBACFC,WAE7C,EAAwCgT,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA4BH,mBAAS,IAArC,mBAAO1D,EAAP,KAAe8D,EAAf,KAEMC,EAAWC,uBAAY,SAACtM,EAAKqJ,GAAN,OAAgB+C,EAAU,CAACpM,MAAKqJ,cAAW,CAAC+C,IAWzE,OATAG,qBAAU,Y,4CACRC,GAAcvP,MAAK,SAAAK,GACjB2O,EAAO3O,MACN6F,OAAM,SAAAsJ,GACP9T,QAAQqD,MAAM,8BAA+ByQ,GAC7CJ,EAAS,GAAGI,QAEb,CAACR,EAAQI,IAGV,qCACE,sEAEA,uBAEO,KAAN/O,EACC,cAAC,EAAD,CAAqBzI,UAAWlB,EAAMkB,UAAWyI,IAAKA,EAAKQ,eAAe,IACzE,gEAGF4M,EACC,qCACE,iEACA,8BAAMA,OAEP,GAGFtS,EACC,qCACE,4DACA,8BAAMA,OAET,GAED,uBACA,cAAC3B,EAAA,EAAD,CAAQzC,QAAQ,YAAYK,QAAS,kBAAIV,EAAMW,YAAY,iBAA3D,oBACA,cAACmC,EAAA,EAAD,CAAQsB,WAAY2S,GAAoBtS,GAChC/D,QAAS,kB,4CAAIqY,CAAuB,2BAAI/Y,GAAL,IAAY0Y,WAAUM,eAAgBR,MADjF,uBAKA,uBAEA,eAACnV,EAAA,EAAD,CAAO4V,KAAqB,KAAfV,EAAmBlY,QAAQ,UAAxC,UACI,cAACgD,EAAA,EAAMG,QAAP,qBACA,4BAAI+U,OAGR,eAAClV,EAAA,EAAD,CAAO4V,OAAMtE,EAAmBtU,QAAQ,SAAxC,UACI,cAACgD,EAAA,EAAMG,QAAP,qBACA,4BAAImR,EAAOA,EAAOe,QAAQ,KAC1B,8BAAMf,EAAOtI,IAAIsI,EAAOtI,IAAIsJ,MAAM,W,wDAO5C,qGACE3Q,QAAQC,MAAM,eAGC,wBAJjB,SAK4B4E,IAAMC,IADjB,yBAJjB,UAKQC,EALR,OAME/E,QAAQC,MAAM,gBAAiB8E,GACL,MAAvBA,EAAYmP,OAPjB,sBAQU,IAAIC,MAAM,yBAA0BpP,EAAYmP,QAR1D,gCAUSnP,EAAYxB,MAVrB,4C,8EAaA,WAAsCvI,GAAtC,kGAEEgF,QAAQC,MAAM,sCAAuCjF,GAE7CgZ,EAA6BhZ,EAA7BgZ,eAAgBN,EAAa1Y,EAAb0Y,SAElBhX,EAAO1B,EAAMkB,UAAUQ,KACvBqV,EAAmB/W,EAAMkB,UAAU6V,iBACnC3R,EAAyBpF,EAAMkB,UAAUkE,uBAE3C6N,EAAqB,CACvBvR,OAEAyR,SAAU,YACV8D,wBAAyBF,EACzBC,sBAAuB5R,EAAuBC,YAG7CrF,EAAMkB,UAAU8U,eAEjB/C,EAAkB,2BAAOjT,EAAMkB,UAAU8U,cAAiB/C,IApB9D,SAuBQpJ,IAAMuJ,KAAK,8BAA+BH,GAC/C3J,MAAK,SAAA4N,GACJlS,QAAQC,MAAM,0CAA2CiS,GACzD8B,EAAe,0CAEhBxJ,OAAM,SAAAnD,GAGL,MAFArH,QAAQqD,MAAM,sDAAuDgE,GACrEqM,EAASrM,EAAK,kDACRA,KA/BV,4C,sBC5EA,IAAQ+M,GAAiD9U,IAAjD8U,cAAeC,GAAkC/U,IAAlC+U,8BAyEvB,SAASC,GAAkBtZ,GAEzB,IAAI2B,EAAS,KACV3B,EAAMkB,UAAUqY,aACjB5X,EAAS,cAAC,IAAD,CAAQC,MAAO,QAAU5B,EAAMkB,UAAUQ,KAAMG,KAAM,MAGhE,IAAM2X,EACJ,gCACE,0DACA,eAACzX,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,mBAAGxB,UAAU,OAAb,SAAqBT,EAAMkB,UAAUQ,SAEvC,cAACM,EAAA,EAAD,CAAKC,GAAI,EAAGxB,UAAU,eAAtB,SAAsCkB,OAGvC3B,EAAMyZ,aAIX,OACE,cAACrY,EAAD,CAAoBT,YAAaX,EAAMW,YAAaY,KAAMiY,EAActY,UAAWlB,EAAMkB,YAQ7F,SAASwY,GAAyB1Z,GAEhC,IAsCI2Z,EAAkBC,EAA2BC,EAtC3CpC,EAAOzX,EAAMkB,UAAUuW,MAAQ,GAC7BtE,EAAsBsE,EAAtBtE,SAAUzC,EAAY+G,EAAZ/G,QACZoJ,EAAgBrC,EAAKpS,WACrB0U,EAAQtC,EAAKG,GAKnB,EAAoCS,qBAApC,mBAAOhT,EAAP,KAAmB2U,EAAnB,KACA,EAA8D3B,qBAA9D,mBAAOpB,EAAP,KAAgChI,EAAhC,KACA,EAAsCoJ,qBAAtC,mBAAO4B,EAAP,KAAoBC,EAApB,KACA,EAAoC7B,qBAApC,mBAAO8B,EAAP,KAAmBC,EAAnB,KAEAxB,qBAAU,WACR,GAAGkB,EAAe,CAChB9U,QAAQC,MAAM,2BAA4B6U,GAC1C,IAAIO,EAAOP,EACkB,kBAAnBA,IAA6BO,EAAOjB,GAAcU,IAC5D,IAAMQ,EAAO5U,MAASC,mBAAmB0U,EAAK,IACxCE,EAAY7U,MAASC,mBAAmB0U,EAAK,IACnDrV,QAAQC,MAAM,wBAAyBqV,EAAMC,GAC7CP,EAAcM,GACdrL,EAA2BsL,GAC3B,IAAMC,EAAOnB,GAA8BiB,GAC3CtV,QAAQC,MAAM,kBAAmBuV,GACjCJ,EAAcI,MAEf,CAACV,IACJlB,qBAAU,WACLmB,GACDU,kBAAQV,GAAOzQ,MAAK,SAAA5H,GAClBwY,EAAexY,QAGlB,CAACqY,IAEJ/U,QAAQC,MAAM,aAAcjF,GAG5B,IAAM0a,GAAa,IAAIC,MAAOC,UAE9B,GAAGvV,EAAY,CACb,IAAMwV,EAAkBxV,EAAWyV,SAASC,SAASH,UACrDjB,EAAmBkB,EAAkBH,EACrCd,EAA4BpM,KAAKwN,MAAMxN,KAAKyN,KAAKJ,EAAkBH,GAJtD,QAKb1V,QAAQC,MAAM,wBAAyB2U,GACpCA,EAA4B,IAAGA,EAA4B,MAE7D3C,IACD4C,EAAsB5C,EAAwB6D,SAASC,SAASH,UAAYF,GAG9E,IAAMQ,EAAY,GAClBA,EAAUnN,KACR,eAAChM,EAAA,EAAD,WAAgB,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,0BAA8B,cAACD,EAAA,EAAD,CAAKvB,UAAU,OAAf,SAAuBwZ,GAAe,UAA3E,SAEXiB,EAAUnN,KACR,eAAChM,EAAA,EAAD,WAAoB,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,sBAA0B,cAACD,EAAA,EAAD,UAAMmR,MAA3C,aAERzC,GACDwK,EAAUnN,KACR,eAAChM,EAAA,EAAD,WAAsB,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,yBAA6B,cAACD,EAAA,EAAD,UAAM0O,MAAhD,eAGVyJ,IACEA,EAAWgB,OACZD,EAAUnN,KACR,eAAChM,EAAA,EAAD,WAAiB,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,mBAAuB,cAACD,EAAA,EAAD,UAAMmY,EAAWgB,MAAMC,eAAtD,UAGVjB,EAAWkB,iBACZH,EAAUnN,KACR,eAAChM,EAAA,EAAD,WAA0B,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,uBAA2B,cAACD,EAAA,EAAD,UAAMmY,EAAWkB,gBAAgBD,eAA7E,oBAIZ/V,IACD6V,EAAUnN,KACR,eAAChM,EAAA,EAAD,WAAmB,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,yBAA6B,cAACD,EAAA,EAAD,UAAMqD,EAAWoF,QAAQC,SAAS,MAAM9I,UAA/E,YAEXsZ,EAAUnN,KACR,eAAChM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,wBACA,eAACD,EAAA,EAAD,CAAKvB,UAAWkZ,EAAiB,SAAS,GAA1C,UACGtU,EAAWyV,SAASC,SAASK,WAC7B,IACAxB,EAA0B,IAAMA,EAA4B,UAAU,6DALlE,iBASK,cAAbzG,GACD+H,EAAUnN,KACR,eAAChM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,sCACA,cAACD,EAAA,EAAD,CAAKvB,UAAWoZ,EAAoB,SAAS,GAA7C,SAAkD5C,EAAwB6D,SAASC,SAASK,eAFrF,wBAOZtB,GACDoB,EAAUnN,KACR,eAAChM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,wBACA,cAACD,EAAA,EAAD,UAAK,8BAAM8X,QAFJ,eAOb,IAAIrG,EAAO,KAEP6H,EAAU,GAsCd,OArCGjW,GAECoO,EADCoG,EAEC,eAACxW,EAAA,EAAD,CAAOhD,QAAQ,SAAf,UACE,cAACgD,EAAA,EAAMG,QAAP,8CACA,yEAA2C,oGAGvCmW,EAEN,eAACtW,EAAA,EAAD,CAAOhD,QAAQ,SAAf,UACE,cAACgD,EAAA,EAAMG,QAAP,gCACA,yEAA2C,oDAA3C,UAIG,cAACH,EAAA,EAAD,CAAOhD,QAAQ,UAAf,mDAGTib,EACE,cAACvZ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAQ7B,KAAK,gBAAb,qBACA,cAAC6B,EAAA,EAAD,CAAQsB,SAAqB,cAAX+O,EAAwB9S,QAAQ,YAAYK,QAAS,kBAAIV,EAAMW,YAAY,gCAA7F,+BAKN8S,EADQzT,EAAMkB,UAAUQ,KAEtB,cAAC2B,EAAA,EAAD,CAAOhD,QAAQ,UAAf,oFAIA,cAACgD,EAAA,EAAD,CAAOhD,QAAQ,UAAf,4DAKF,gCACE,6CAECoT,EAEAyH,EAEAI,KAMQC,OAvQf,SAAavb,GAEX,MAAwBqY,mBAAS,IAAjC,mBAAO3W,EAAP,KAAakS,EAAb,KACA,EAAwByE,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaI,EAAb,KACA,EAAwCQ,mBAAS,IAAjD,mBAAOrC,EAAP,KAAqB/D,EAArB,KACA,EAAwBoG,mBAAS,gBAAjC,mBAAO9W,EAAP,KAAaqJ,EAAb,KACA,EAA4DyN,mBAAS,IAArE,mBAAOjT,EAAP,KAA+BoE,EAA/B,KACA,EAAgD6O,mBAAS,IAAzD,mBAAOtB,EAAP,KAAyByE,EAAzB,KACA,EAAkDnD,mBAAS,IAA3D,mBAAO7N,EAAP,KAA0BiR,EAA1B,KACA,EAAgCpD,mBAAS,IAAzC,mBAAOlW,EAAP,KAAiBuZ,EAAjB,KAEMC,EAAaC,mBAAQ,WACzB,IAAIC,EAAazE,GACjB,OAAO7V,GACL,IAAK,2BAA4Bsa,EAAanC,GAA0B,MACxE,IAAK,8BAA+BmC,EAAazD,GAGnD,OAAOyD,IACN,CAACta,IAEEua,EAAgBnD,uBAAY,SAAAlB,GAC7BA,EAAKtE,UAAYsE,EAAK/V,OACvBsD,QAAQC,MAAM,2CAA4CwS,GAC1D7M,EAAQ,6BAGViN,EAAQJ,KACP,CAAC7M,EAASiN,IAEPkE,EAAgCpD,uBAAY,SAAAvT,GAEhDoE,EAA0BpE,GAC1BwO,EAAQxO,EAAuB1D,QAC9B,CAAC8H,EAA2BoK,IAWzB1S,EAAY,CAChBQ,OAAM+V,OAAMzB,eAAc5Q,yBAC1B2R,mBAAkBvM,oBAClBrI,WAEA0V,QAASiE,EACTtS,0BAA2BuS,EAC3B7R,8BAhBoCyO,uBAAY,SAAClT,EAAK6U,GACtDtV,QAAQC,MAAM,mCAAoCQ,GAClD+V,EAAoB/V,GACpBgW,EAAqBnB,KAEpB,CAACkB,EAAqBC,IAYvBxJ,kBACAyJ,eAIEjC,EAAY,cAACkC,EAAD,CAAYza,UAAWA,EAAWP,YAAaiK,IAC/D,OACE,cAAC0O,GAAD,CACE3Y,YAAaiK,EACb6O,UAAWA,EACXvY,UAAWA,KCvEG8a,QACW,cAA7B3M,OAAOkE,SAASwE,UAEe,UAA7B1I,OAAOkE,SAASwE,UAEhB1I,OAAOkE,SAASwE,SAASkE,MACvB,2D,oECTAC,I,OAAY,CAACC,G,OAAIC,G,SAYvBC,KACGC,IAAIC,MACJD,IAAIE,MACJC,KAAK,CACJP,aACAQ,YAAa,KAEbC,aAAc,IAEdC,cAAe,CACbC,aAAa,EACbC,OArBN,SAAyBlb,EAAOkb,EAAQC,GACtC,OAAGnb,aAAiB+Y,KACXqC,KAAOpb,GAAOqb,OAAOF,GAAKD,OAAOA,GAC/BI,MAAMtb,IAAWsb,MAAMJ,GAI3Blb,EAHEiH,OAAOjH,GAAOub,QAAQL,OAqBlBT,GAAf,ECzBAe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrU,MAAK,SAAAsU,GACJA,EAAaC,gBAEdrO,OAAM,SAAAnH,GACLrD,QAAQqD,MAAMA,EAAMqN,c","file":"static/js/main.51d844dd.chunk.js","sourcesContent":["import React from 'react'\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Trans } from 'react-i18next';\n\nexport default function Menu(props) {\n\n  // let boutonProtege\n  // if(props.rootProps.modeProtege) {\n  //   boutonProtege = <i className=\"fa fa-lg fa-lock protege\"/>\n  // } else {\n  //   boutonProtege = <i className=\"fa fa-lg fa-unlock\"/>\n  // }\n\n  // const iconeHome = <span><i className=\"fa fa-home\"/> {props.rootProps.nomMilleGrille}</span>\n\n  return (\n    <Navbar collapseOnSelect expand=\"md\" bg=\"info\" variant=\"dark\" fixed=\"top\">\n      <Nav.Link className=\"navbar-brand\" onClick={props.changerPage} eventKey='Accueil'>\n        <Trans>application.nom</Trans>\n      </Nav.Link>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-menu\" />\n      <Navbar.Collapse id=\"responsive-navbar-menu\">\n        <Nav>\n          <Nav.Link href='/'></Nav.Link>\n        </Nav>\n        <Nav className=\"mr-auto\">\n        </Nav>\n        <Nav className=\"justify-content-end\">\n          <Nav.Link onClick={props.rootProps.changerLanguage}><Trans>menu.changerLangue</Trans></Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n","import React from 'react'\nimport { Container, Row, Col} from 'react-bootstrap'\nimport { Trans } from 'react-i18next'\nimport QRCode from 'qrcode.react'\n\nimport Menu from './Menu'\n\nimport './Layout.css'\n\nexport function LayoutMillegrilles(props) {\n\n  return (\n    <div className=\"flex-wrapper\">\n      <div>\n        <Entete changerPage={props.changerPage} rootProps={props.rootProps}/>\n        <Contenu changerPage={props.changerPage} page={props.page}/>\n      </div>\n      <Footer rootProps={props.rootProps}/>\n    </div>\n  )\n\n}\n\nfunction Entete(props) {\n  return (\n    <Container>\n      <Menu changerPage={props.changerPage} rootProps={props.rootProps}/>\n      <h1>MilleGrilles</h1>\n    </Container>\n  )\n}\n\nfunction Contenu(props) {\n  return (\n    <Container>\n      {props.page}\n    </Container>\n  )\n}\n\nfunction Footer(props) {\n\n  const idmg = props.rootProps.idmg\n  var qrCode = null\n\n  if(props.rootProps.idmg) {\n    qrCode = <QRCode value={'idmg:' + idmg} size={75} />\n  }\n\n  return (\n    <Container fluid className=\"footer bg-info\">\n      <Row>\n        <Col sm={2} className=\"footer-left\"></Col>\n        <Col sm={8} className=\"footer-center\">\n          <div className=\"millegrille-footer\">\n            <div>IDMG : {idmg}</div>\n            <div>\n              <Trans>application.advert</Trans>{' '}\n              <span title={props.rootProps.manifest.date}>\n                <Trans values={{version: props.rootProps.manifest.version}}>application.version</Trans>\n              </span>\n            </div>\n          </div>\n        </Col>\n        <Col sm={2} className=\"footer-right\">{qrCode}</Col>\n      </Row>\n    </Container>\n  )\n}\n","import React from 'react'\nimport {Container, Row, Col, Form, Button, Alert} from 'react-bootstrap'\n\nexport class SelectionnerTypeNoeud extends React.Component {\n\n  state = {\n    afficherAide: false,\n  }\n\n  fermerAide = event => {\n    this.setState({afficherAide: false})\n  }\n\n  render() {\n\n    var informationTypes = (\n      <Row>\n        <Col>\n          <Button onClick={event=>{this.setState({afficherAide: true})}}><i className=\"fa fa-question-circle\"/></Button>\n        </Col>\n      </Row>\n    )\n    if(this.state.afficherAide) {\n      informationTypes = <AideTypes fermer={this.fermerAide}/>\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h3>Configurer le nouveau noeud</h3>\n\n            Nouveau noeud de MilleGrille. Veuillez suivre les etapes pour demarrer votre noeud.\n          </Col>\n        </Row>\n\n        {informationTypes}\n\n        <Row>\n          <Col>\n            <h3>Type de noeud</h3>\n          </Col>\n        </Row>\n\n\n        <FormTypeNoeud {...this.props}/>\n\n      </Container>\n    )\n  }\n}\n\nfunction AideTypes(props) {\n  return (\n    <Alert variant=\"info\" onClose={props.fermer} dismissible>\n      <Alert.Heading>Information sur les types de noeud</Alert.Heading>\n      <Row>\n        <Col md={2}>Protege</Col>\n        <Col md={10}>\n          Noeud central de la MilleGrille. Contient une base de donnees,\n          un systeme de messagerie et un certificat special lui permettant\n          d'autoriser les autres composants systeme. Le noeud protege supporte\n          toutes les fonctionnalites protegees, privees et publiques.\n        </Col>\n      </Row>\n      <Row>\n        <Col md={2}>Prive</Col>\n        <Col md={10}>\n          Noeud additionnel qui supporte des services et des applications (senseurs, backup, etc.).\n          Doit etre associe a un noeud protege. Peut aussi agir comme noeud public\n          s'il est configure avec acces a internet.\n        </Col>\n      </Row>\n      <Row>\n        <Col md={2}>Public</Col>\n        <Col md={10}>\n          Noeud specialise pour la publication et dissemination sur internet. Doit etre\n          associe a un noeud protege. Ce noeud doit aussi etre configure avec un acces\n          internet (adresse DNS, ports ouverts sur le routeur).\n        </Col>\n      </Row>\n    </Alert>\n  )\n}\n\nfunction FormTypeNoeud(props) {\n  return (\n    <>\n      <Form>\n\n        <fieldset>\n          <Form.Group>\n            <Form.Check id=\"typenoeud-protege\">\n              <Form.Check.Input type='radio' name=\"type-noeud\" value='protege'\n                                onChange={props.setTypeNoeud} />\n              <Form.Check.Label>Protege</Form.Check.Label>\n            </Form.Check>\n            <Form.Check id=\"typenoeud-prive\">\n              <Form.Check.Input type='radio' name=\"type-noeud\" value='prive'\n                                onChange={props.setTypeNoeud} />\n              <Form.Check.Label>Prive</Form.Check.Label>\n            </Form.Check>\n            <Form.Check id=\"typenoeud-public\">\n              <Form.Check.Input type='radio' name=\"type-noeud\" value='public'\n                                onChange={props.setTypeNoeud} />\n              <Form.Check.Label>Public</Form.Check.Label>\n            </Form.Check>\n          </Form.Group>\n        </fieldset>\n\n      </Form>\n      <Row className=\"boutons-installer\">\n        <Col>\n          <Button onClick={props.afficherPageTypeInstallation} value=\"true\"\n                  disabled={!props.typeNoeud}>Suivant</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import axios from 'axios'\n// import { openDB } from 'idb'\n// import stringify from 'json-stable-stringify'\nimport { pki as forgePki } from '@dugrema/node-forge'\n\n// import {\n//     genererCertificatMilleGrille, genererCertificatIntermediaire\n// } from '@dugrema/millegrilles.common/lib/cryptoForge'\nimport {  encoderIdmg } from '@dugrema/millegrilles.utiljs/src/idmg'\n\nimport { \n  genererClePrivee, genererCertificatMilleGrille, genererCertificatIntermediaire,\n  chargerPemClePriveeEd25519, \n  genererPassword,\n} from '@dugrema/millegrilles.utiljs/src/certificats'\n\n// Importer pour wiring des fonctions de hachage react\nimport { forgecommon } from '@dugrema/millegrilles.reactjs'\n\nconst { chargerClePrivee } = forgecommon  // from '@dugrema/millegrilles.common/lib/forgecommon'\n\n// import { encoderIdmg } from '@dugrema/millegrilles.utiljs/lib/idmg'\n// import { CryptageAsymetrique, genererAleatoireBase64 } from '@dugrema/millegrilles.common/lib/cryptoSubtle'\n\n// const cryptageAsymetriqueHelper = new CryptageAsymetrique()\n\n// export async function genererNouvelleCleMillegrille() {\n//   // console.debug(\"Params genererNouvelleCleMillegrille\")\n//   return await genererNouveauCertificatMilleGrille()\n// }\n\nexport async function chargerClePriveeForge(clePriveePem, motdepasse) {\n  const clePriveeForge = await chargerClePrivee(clePriveePem, {password: motdepasse})\n  return clePriveeForge\n}\n\nexport async function preparerCleCertMillegrille(certificatPem, clePriveePem, motdepasse) {\n  // Preparer les cles et calcule le idmg\n\n  // console.debug(\"Conserver cle chiffree, cert\\n%s\", certificatPem)\n  // const clePriveeForge = await chargerClePrivee(clePriveePem, {password: motdepasse})\n  // // console.debug(\"Cle privee forge\\n%O\", clePriveeForge)\n  // const clePriveeDechiffreePem = sauvegarderPrivateKeyToPEM(clePriveeForge)\n\n  const clePrivee = chargerPemClePriveeEd25519(clePriveePem, {password: motdepasse})\n  // console.debug(\"Cle privee : %O\", clePrivee)\n  const idmg = await encoderIdmg(certificatPem)\n  console.debug(\"IDMG calcule : %s\", idmg)\n\n  // const helperAsymetrique = new CryptageAsymetrique()\n  // const {clePriveeDecrypt, clePriveeSigner, clePriveeSignerPKCS1_5} = await helperAsymetrique.preparerClePrivee(clePriveeDechiffreePem)\n\n  // const dictCles = {signer: clePriveeSigner, signerPKCS1_5: clePriveeSignerPKCS1_5, dechiffrer: clePriveeDecrypt}\n\n  //// sauvegarderRacineMillegrille(idmg, certificatPem, dictCles)\n\n  //return {...dictCles, idmg, certificat: certificatPem}\n\n  return {idmg, clePrivee}\n}\n\nexport async function signerCSRIntermediaire(csrPem, infoClecertMillegrille) {\n  const { certificat, clePrivee } = infoClecertMillegrille  //await chargerClecertMillegrilleSignature(idmg)\n  const certPem = await genererCertificatIntermediaire(csrPem, certificat, clePrivee)\n  return certPem\n}\n\nexport async function chargerCertificatPem(pem) {\n  return forgePki.certificateFromPem(pem)\n}\n\n// Genere un nouveau certificat de MilleGrille racine\nexport async function genererNouveauCertificatMilleGrille() {\n\n  // Preparer secret pour mot de passe partiel navigateur\n  const motdepasseCle = genererPassword()\n\n  const {\n    // pemPublic, \n    pem, \n    pemChiffre, \n    publicKey: publicKeyCrypto, \n    privateKey: privateKeyCrypto\n  } = await genererClePrivee({password: motdepasseCle, dechiffre: true})\n  console.debug(\"Public Key : %O\", publicKeyCrypto)\n  console.debug(\"Private Key : %O\", privateKeyCrypto)\n\n  // Afficher PEMS\n  // debug(\"PEM Public: %s\", '\\n'+pemPublic)\n  console.debug(\"PEM prive : %s\", '\\n'+pem)\n  console.debug(\"PEM chiffre : %s\", '\\n'+pemChiffre)\n\n  const {idmg, pem: certPem} = await genererCertificatMilleGrille(pem)\n\n  console.debug(\"Nouveau certificat CA\\n%s\", certPem)\n  return {idmg, certPem, clePriveePem: pemChiffre, motdepasseCle}\n\n  // const {clePriveePkcs8, clePubliqueSpki, clePriveeSigner} =\n  //   await cryptageAsymetriqueHelper.genererKeysNavigateur({modulusLength: 3072})\n\n  // const infoCles = await genererClePrivee({password: motdepasseCle})\n  // console.debug(\"Info Cles : %O\", infoCles)\n  // const clePriveePEM = enveloppePEMPrivee(clePriveePkcs8, true),\n  //       clePubliquePEM = enveloppePEMPublique(clePubliqueSpki)\n\n  // // console.debug(\"Cle privee PEM\\n%O \\nCle publique PEM\\n%O\", clePriveePEM, clePubliquePEM)\n\n  // const clePriveeChiffree = await chiffrerPrivateKeyPEM(clePriveePEM, motdepasseCle)\n\n  // // console.debug(\"Cle Privee Chiffree\")\n  // // console.debug(clePriveeChiffree)\n\n  // // Importer dans forge, creer certificat de MilleGrille\n  // const {cert, pem: certPEM, idmg} = await genererCertificatMilleGrille(clePriveePEM, clePubliquePEM)\n\n  // return {\n  //   clePriveePEM, clePubliquePEM, cert, certPEM, idmg, clePriveeChiffree, motdepasseCle, clePriveeSigner\n  // }\n}\n\n// Recupere un CSR a signer avec la cle de MilleGrille\nexport async function preparerInscription(url, pkiMilleGrille) {\n  console.debug(\"PKI Millegrille params\")\n  console.debug(pkiMilleGrille)\n\n  // const {certMillegrillePEM, clePriveeMillegrilleChiffree, motdepasseCleMillegrille} = pkiMilleGrille\n\n  // Extraire PEM vers objets nodeforge\n  // const certMillegrille = forgePki.certificateFromPem(certMillegrillePEM)\n  // const clePriveeMillegrille = chargerClePrivee(clePriveeMillegrilleChiffree, {password: motdepasseCleMillegrille})\n\n  // Calculer IDMG a partir du certificat de millegrille\n  // const idmg = await encoderIdmg(certMillegrillePEM)\n\n  const parametresRequete = {nomUsager: pkiMilleGrille.nomUsager}\n  if(pkiMilleGrille.u2f) {\n    parametresRequete.u2fRegistration = true\n  }\n\n  // Aller chercher un CSR pour le nouveau compte\n  const reponsePreparation = await axios.post(url, parametresRequete)\n  console.debug(\"Reponse preparation inscription compte :\\n%O\", reponsePreparation.data)\n\n  // Creer le certificat intermediaire\n  // const { csrPem: csrPEM, u2fRegistrationRequest, challengeCertificat } = reponsePreparation.data\n  \n  throw new Error(\"Fix me\")\n  // const {cert, pem: certPem} = await genererCertificatIntermediaire(idmg, certMillegrille, clePriveeMillegrille, {csrPEM})\n\n  // return {\n  //   certPem,\n  //   u2fRegistrationRequest,\n  //   challengeCertificat,\n  // }\n}\n\n// export async function sauvegarderCertificatPem(usager, certificatPem, chainePem) {\n//   const nomDB = 'millegrilles.' + usager\n\n//   const db = await openDB(nomDB)\n\n//   console.debug(\"Sauvegarde du nouveau cerfificat de navigateur usager (%s) :\\n%O\", usager, certificatPem)\n\n//   const txUpdate = db.transaction('cles', 'readwrite');\n//   const storeUpdate = txUpdate.objectStore('cles');\n//   await Promise.all([\n//     storeUpdate.put(certificatPem, 'certificat'),\n//     storeUpdate.put(chainePem, 'fullchain'),\n//     storeUpdate.delete('csr'),\n//     txUpdate.done,\n//   ])\n// }\n\n// export async function sauvegarderRacineMillegrille(idmg, certificatPem, clesPriveesSubtle) {\n//   const nomDB = 'millegrille.' + idmg\n//   // console.debug(\"Conserver cles %s\\n%O\", nomDB, clesPriveesSubtle)\n\n//   const db = await openDB(nomDB, 1, {\n//     upgrade(db) {\n//       db.createObjectStore('cles')\n//     },\n//   })\n\n//   const {signer: cleSigner, dechiffrer: cleDechiffrer, signerPKCS1_5} = clesPriveesSubtle\n\n//   // console.debug(\"Sauvegarde du nouveau cerfificat et cle de MilleGrille (idmg: %s) :\\n%O\", idmg, certificatPem)\n\n//   const txUpdate = db.transaction('cles', 'readwrite');\n//   const storeUpdate = txUpdate.objectStore('cles');\n\n//   const listeTransactions = [storeUpdate.put(certificatPem, 'millegrille.certificat'), txUpdate.done]\n\n//   // Cles optionnelles\n//   if(cleSigner) listeTransactions.push(storeUpdate.put(cleSigner, 'millegrille.signer'))\n//   if(cleDechiffrer) listeTransactions.push(storeUpdate.put(cleDechiffrer, 'millegrille.dechiffrer'))\n//   if(signerPKCS1_5) listeTransactions.push(storeUpdate.put(signerPKCS1_5, 'millegrille.signerPKCS1_5'))\n\n//   // Attendre fin de traitement des transactions\n//   await Promise.all(listeTransactions)\n// }\n\n// export async function signerChallenge(usager, challengeJson) {\n\n//   const contenuString = stringify(challengeJson)\n\n//   const nomDB = 'millegrilles.' + usager\n//   const db = await openDB(nomDB)\n//   const tx = await db.transaction('cles', 'readonly')\n//   const store = tx.objectStore('cles')\n//   const cleSignature = (await store.get('signer'))\n//   await tx.done\n\n//   const challengeStr = stringify(challengeJson)\n//   const signature = await new CryptageAsymetrique().signerContenuString(cleSignature, contenuString)\n\n//   return signature\n// }\n\n// async function chargerClecertMillegrilleSignature(idmg) {\n\n//   const nomDB = 'millegrille.' + idmg\n//   const db = await openDB(nomDB)\n//   const tx = await db.transaction('cles', 'readonly')\n//   const store = tx.objectStore('cles')\n//   const cleSignature = (await store.get('millegrille.signer'))\n//   const cleSignaturePKCS1_5 = (await store.get('millegrille.signerPKCS1_5'))\n//   const certificat = (await store.get('millegrille.certificat'))\n//   await tx.done\n\n//   return {certificat, signer: cleSignature, signerPKCS1_5: cleSignaturePKCS1_5}\n// }\n\n// // Initialiser le contenu du navigateur\n// export async function initialiserNavigateur(usager, opts) {\n//   if(!opts) opts = {}\n\n//   const nomDB = 'millegrilles.' + usager\n//   const db = await openDB(nomDB, 1, {\n//     upgrade(db) {\n//       db.createObjectStore('cles')\n//     },\n//   })\n\n//   // console.debug(\"Database %O\", db)\n//   const tx = await db.transaction('cles', 'readonly')\n//   const store = tx.objectStore('cles')\n//   const certificat = (await store.get('certificat'))\n//   const fullchain = (await store.get('fullchain'))\n//   const csr = (await store.get('csr'))\n//   await tx.done\n\n//   if( opts.regenerer || ( !certificat && !csr ) ) {\n//     console.debug(\"Generer nouveau CSR\")\n//     // Generer nouveau keypair et stocker\n//     const keypair = await new CryptageAsymetrique().genererKeysNavigateur()\n//     console.debug(\"Key pair : %O\", keypair)\n\n//     const clePriveePem = enveloppePEMPrivee(keypair.clePriveePkcs8),\n//           clePubliquePem = enveloppePEMPublique(keypair.clePubliqueSpki)\n//     console.debug(\"Cles :\\n%s\\n%s\", clePriveePem, clePubliquePem)\n\n//     const clePriveeForge = chargerClePrivee(clePriveePem),\n//           clePubliqueForge = chargerClePubliquePEM(clePubliquePem)\n\n//     // console.debug(\"CSR Genere : %O\", resultat)\n//     const csrNavigateur = await genererCsrNavigateur('idmg', 'nomUsager', clePubliqueForge, clePriveeForge)\n\n//     console.debug(\"CSR Navigateur :\\n%s\", csrNavigateur)\n\n//     const txPut = db.transaction('cles', 'readwrite');\n//     const storePut = txPut.objectStore('cles');\n//     await Promise.all([\n//       storePut.put(keypair.clePriveeDecrypt, 'dechiffrer'),\n//       storePut.put(keypair.clePriveeSigner, 'signer'),\n//       storePut.put(keypair.clePublique, 'public'),\n//       storePut.put(csrNavigateur, 'csr'),\n//       txPut.done,\n//     ])\n\n//     return { csr: csrNavigateur }\n//   } else {\n//     return { certificat, fullchain, csr }\n//   }\n\n// }\n","import React from 'react'\nimport {Row, Col, Form, Button, Alert} from 'react-bootstrap'\nimport Dropzone from 'react-dropzone'\n// import QrReader from 'react-qr-reader'\n\nimport axios from 'axios'\n\n// import {detecterAppareilsDisponibles} from '@dugrema/millegrilles.common/lib/detecterAppareils'\nimport { detecterAppareilsDisponibles } from '@dugrema/millegrilles.reactjs'\nimport { preparerCleCertMillegrille } from '../components/pkiHelper'\n\nimport { signerCSRIntermediaire, chargerCertificatPem } from '../components/pkiHelper'\n\nexport class ChargementClePrivee extends React.Component {\n\n  state = {\n    certificat: '',\n    motdepasse: '',\n    cleChiffree: '',\n\n    afficherErreur: false,\n    erreurChargement: '',\n    clePriveeChargee: false,\n\n    modeScanQR: false,\n    videoinput: false,\n\n    resultatScan: '',\n\n    partiesDeCle: {},\n    nombrePartiesDeCle: '',\n    nombrePartiesDeCleScannees: 0,\n\n    partiesDeCertificat: {},\n    nombrePartiesDeCertificatTotal: '',\n    nombrePartiesDeCertificatScannes: 0,\n  }\n\n  componentDidMount() {\n    detecterAppareilsDisponibles().then(apps=>{console.debug(\"Apps detectees : %O\", apps); this.setState({...apps})})\n  }\n\n  async chargerCle() {\n    if(this.state.certificat && this.state.motdepasse && this.state.cleChiffree) {\n      try {\n        console.debug(\"State chargeCle : %O\", this.state)\n        const infoClecertMillegrille = await preparerCleCertMillegrille(\n          this.state.certificat, this.state.cleChiffree, this.state.motdepasse)\n        console.debug(\"Chargement cert, cles : %O\", infoClecertMillegrille)\n\n        if(infoClecertMillegrille) {\n          this.setState({clePriveeChargee: true, motdepasse: '', cleChiffree: ''})\n          this.fermerScanQr() // S'assurer que la fenetre codes QR est fermee, on a la cle\n          this.props.rootProps.setInfoClecertMillegrille({...infoClecertMillegrille, certificat: this.state.certificat})\n          console.debug(\"Root props avec info cle : %O\", this.props.rootProps)\n\n          // Generer nouveau certificat de noeud protege\n          this.traiterCsr()\n\n        } else {\n          this.setState({clePriveeChargee: false, afficherErreur: true})\n        }\n      } catch(err) {\n        console.error(\"Erreur chargement cle\\n%O\", err)\n        this.setState({erreurChargement: err, afficherErreur: true})\n      }\n    } else {\n      console.debug(\"Cle, cert pas pret : %O\", this.state)\n    }\n  }\n\n  async traiterCsr() {\n    let contenuCsr = this.props.csr\n    if(!contenuCsr) {\n      const urlCsr = this.props.urlCsr || '/installation/api/csr'\n      const csrResponse = await axios.get(urlCsr)\n      contenuCsr = csrResponse.data\n    }\n\n    // const infoClecertMillegrille = this.props.rootProps.infoClecertMillegrille\n    // console.debug(\"Generer certificat intermediaire pour noeud protege : %O\", infoClecertMillegrille)\n    const certificatintermediairePem = await signerCSRIntermediaire(contenuCsr, this.props.rootProps.infoClecertMillegrille)\n    const certificatintermediaireCert = await chargerCertificatPem(certificatintermediairePem)\n    // console.debug(\"Certificat intermediaire\\n%s\", certificatintermediairePem)\n\n    this.setState({certificatintermediairePem, certificatintermediaireCert})\n\n    this.props.rootProps.setInfoCertificatNoeudProtege(certificatintermediairePem, certificatintermediaireCert)\n  }\n\n  changerChamp = event => {\n    const {name, value} = event.currentTarget\n    this.setState({[name]: value}, async _ =>{\n      console.debug(\"State : %O\", this.state)\n    })\n  }\n\n  recevoirFichiers = async acceptedFiles => {\n    const resultats = await traiterUploads(acceptedFiles)\n    console.debug(\"Resultats upload : %O\", resultats)\n\n    // Format fichier JSON : {idmg, racine: {cleChiffree, certificat}}\n    if(resultats.length > 0) {\n      const resultat = resultats[0]\n      const cleChiffree = resultat.racine.cleChiffree,\n            certificat = resultat.racine.certificat\n      if(cleChiffree && certificat) {\n        await new Promise((resolve, reject)=>{\n          this.setState({cleChiffree, certificat}, _=>{\n            // Tenter de charger la cle\n            this.chargerCle()\n            resolve()\n          })\n        })\n      }\n    }\n  }\n\n  activerScanQr = _ => {this.setState({modeScanQR: true})}\n  fermerScanQr = _ => {this.setState({modeScanQR: false})}\n  erreurScanQr = event => {console.error(\"Erreur scan QR: %O\", event); this.fermerScanQr()}\n  handleScan = async data => {\n    //console.debug(\"Scan : %O\", data)\n    if (data) {\n      await new Promise((resolve, reject)=>{\n        this.setState({resultatScan: data}, _=>{resolve()})\n      })\n\n      const lignesQR = data.split('\\n')\n      if(lignesQR.length === 1) {\n        // Probablement le mot de passe\n        this.setState({motdepasse: data}, _=>{this.chargerCle()})\n      } else if(lignesQR.length === 2) {\n        // Probablement une partie decle ou certificat\n        var tag = lignesQR[0].split(';')\n        if(tag.length === 3) {\n          const type = tag[0],\n                index = tag[1],  // Garder en str pour cle de dict\n                count = Number(tag[2])\n\n          if(type === 'racine.cle') {\n            const partiesDeCle = {...this.state.partiesDeCle, [index]: lignesQR[1]}\n            const comptePartiesDeCle = Object.keys(partiesDeCle).length\n            await new Promise((resolve, reject)=>{\n              this.setState({\n                partiesDeCle,\n                nombrePartiesDeCle: count,\n                nombrePartiesDeCleScannees: comptePartiesDeCle,\n              }, _=>{resolve()})\n            })\n          } else if(type === 'racine.cert') {\n            const partiesDeCertificat = {...this.state.partiesDeCertificat, [index]: lignesQR[1]}\n            const comptePartiesDeCertificat = Object.keys(partiesDeCertificat).length\n            this.setState({\n              partiesDeCertificat,\n              nombrePartiesDeCertificatTotal: count,\n              nombrePartiesDeCertificatScannes: comptePartiesDeCertificat,\n            })\n          }\n        }\n      }\n\n      // Verifier si on a toute l'information (mot de passe et cle)\n      if( this.state.nombrePartiesDeCle === this.state.nombrePartiesDeCleScannees ) {\n        // On a toutes les parties de cle, on les assemble\n        const cleChiffree = assemblerCleChiffree(this.state.partiesDeCle)\n        this.setState({cleChiffree}, _=>{this.chargerCle()})\n      }\n\n      // Verifier si on a toute l'information de certificat\n      if( this.state.nombrePartiesDeCertificatTotal === this.state.nombrePartiesDeCertificatScannes ) {\n        // On a toutes les parties de cle, on les assemble\n        const certificat = assemblerCertificat(this.state.partiesDeCertificat)\n        this.setState({certificat}, _=>{this.chargerCle()})\n      }\n\n    }\n  }\n\n  cacherErreurChargement = event => {\n    this.setState({afficherErreur: false})\n  }\n\n  render() {\n\n    const { cacherBoutons } = this.props\n    \n    if(this.state.modeScanQR) {\n      return <QRCodeReader fermer={this.fermerScanQr}\n                           resultatScan={this.state.resultatScan}\n                           handleError={this.erreurScanQr}\n                           handleScan={this.handleScan}\n                           nombrePartiesDeCleTotal={this.state.nombrePartiesDeCle}\n                           nombrePartiesDeCleScannees={this.state.nombrePartiesDeCleScannees}\n                           nombrePartiesDeCertificatTotal={this.state.nombrePartiesDeCertificatTotal}\n                           nombrePartiesDeCertificatScannes={this.state.nombrePartiesDeCertificatScannes}\n                           motdepasse={this.state.motdepasse} />\n    }\n\n    var contenu = ''\n    // const intermediairePem = this.props.rootProps.intermediairePem\n    const intermediaireCert = this.props.rootProps.intermediaireCert\n    // console.debug(\"!!! render() intermediairePem: %O\\nprops : %O\", intermediaireCert, this.props)\n\n    if(this.state.clePriveeChargee && intermediaireCert) {\n      contenu = (\n        <Alert variant=\"success\">\n          <Alert.Heading>Cle prete</Alert.Heading>\n          <p>Certificat et cle de MilleGrille charges correctement.</p>\n          <p>IDMG charge : {this.props.rootProps.idmg}</p>\n          <p>\n            Certificat intermediaire genere pour le noeud protege :{' '}\n            {intermediaireCert.subject.getField('CN').value}\n          </p>\n        </Alert>\n      )\n    } else {\n      contenu = <ChargerInformation motdepasse={this.state.motdepasse}\n                                    changerChamp={this.changerChamp}\n                                    recevoirFichiers={this.recevoirFichiers}\n                                    videoinput={this.state.videoinput}\n                                    activerScanQr={this.activerScanQr}\n                                    setPage={this.props.setPage}\n                                    afficherErreur={this.state.afficherErreur}\n                                    erreurChargement={this.state.erreurChargement}\n                                    cacherErreurChargement={this.cacherErreurChargement}\n                                    existantSeulement={cacherBoutons} />\n    }\n\n    return (\n      <>\n        <Row>\n          <Col><h3>Certificat et cle privee de MilleGrille</h3></Col>\n        </Row>\n\n        {contenu}\n\n        {cacherBoutons!==true?\n          <Row className=\"boutons-installer\">\n            <Col>\n              <Button onClick={this.props.setPage} value='PageConfigurationInternet' disabled={!this.state.clePriveeChargee}>Suivant</Button>\n              <Button onClick={this.props.setPage} value='SelectionnerTypeNoeud' variant=\"secondary\">Retour</Button>\n            </Col>\n          </Row>\n          :''\n        }\n      </>\n    )\n  }\n\n}\n\nfunction ChargerInformation(props) {\n\n  var erreurChargement = ''\n  if(props.afficherErreur) {\n    erreurChargement = (\n      <Alert variant=\"danger\" onClose={props.cacherErreurChargement} dismissible>\n        <Alert.Heading>Cle invalide</Alert.Heading>\n        <p>{''+props.erreurChargement}</p>\n      </Alert>\n    )\n  }\n\n  if(props.existantSeulement) {\n    return (\n      <Row>\n        <Col>\n          {erreurChargement}\n          <FormUpload {...props}/>\n        </Col>\n      </Row>\n    )\n  }\n\n  return (\n    <Row>\n      <Col md={5}>\n        <h4>Creer une nouvelle MilleGrille</h4>\n        <Button variant=\"secondary\"\n                onClick={props.setPage}\n                value=\"GenererNouvelleCle\">Nouvelle</Button>\n      </Col>\n      <Col md={2}>\n        <p>|</p>\n        <p>OU</p>\n        <p>|</p>\n      </Col>\n      <Col md={5}>\n        {erreurChargement}\n        <FormUpload {...props}/>\n      </Col>\n    </Row>\n  )\n}\n\nfunction FormUpload(props) {\n\n  var bontonQrScan = ''\n  if(props.videoinput) {\n    bontonQrScan = (\n      <Button variant=\"secondary\" onClick={props.activerScanQr}>\n        QR Scan\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <h4>Importer certificat et cle existants</h4>\n\n      <Form.Group controlId=\"formMotdepasse\">\n        <Form.Label>Mot de passe de cle</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"motdepasse\"\n          value={props.motdepasse}\n          autoComplete=\"false\"\n          onChange={props.changerChamp}\n          placeholder=\"AAAA-bbbb-1111-2222\" />\n      </Form.Group>\n\n      <Row>\n        <Col>\n\n          <Dropzone onDrop={props.recevoirFichiers}>\n            {({getRootProps, getInputProps}) => (\n              <span className=\"uploadIcon btn btn-secondary\">\n                <span {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <span className=\"fa fa-upload fa-2x\"/>\n                </span>\n              </span>\n            )}\n          </Dropzone>\n\n          {bontonQrScan}\n\n        </Col>\n        <Col>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nasync function traiterUploads(acceptedFiles) {\n\n  const resultats = await Promise.all(acceptedFiles.map(async file =>{\n    if( file.type === 'application/json' ) {\n      var reader = new FileReader();\n      const fichierCharge = await new Promise((resolve, reject)=>{\n        reader.onload = () => {\n          var buffer = reader.result;\n          const contenuFichier =  String.fromCharCode.apply(null, new Uint8Array(buffer));\n          resolve({contenuFichier});\n        }\n        reader.onerror = err => {\n          reject(err);\n        }\n        reader.readAsArrayBuffer(file);\n      })\n\n      console.debug(fichierCharge)\n\n      const contenuJson = JSON.parse(fichierCharge.contenuFichier)\n\n      return contenuJson\n    }\n  }))\n\n  return resultats\n}\n\nfunction QRCodeReader(props) {\n\n  // var progresMotdepasse = 0, labelMotdepasse = 'Non charge'\n  //if(props.motdepasse) {\n    // progresMotdepasse = 100\n    // labelMotdepasse = 'Charge'\n  //}\n\n  // var progresCleMillegrille = 0\n  // if(props.nombrePartiesDeCleTotal) {\n  //   progresCleMillegrille = Math.round(props.nombrePartiesDeCleScannees / props.nombrePartiesDeCleTotal * 100)\n  // }\n\n  // var progresCertificat = 0\n  // if(props.nombrePartiesDeCertificatTotal) {\n  //   progresCertificat = Math.round(props.nombrePartiesDeCertificatScannes / props.nombrePartiesDeCertificatTotal * 100)\n  // }\n\n  return <p>Fix me</p>\n\n  // return (\n  //   <>\n  //     <QrReader\n  //       delay={300}\n  //       onError={props.handleError}\n  //       onScan={props.handleScan}\n  //       style={{ width: '75%', 'text-align': 'center' }}\n  //       />\n  //     <Button onClick={props.fermer}>Fermer</Button>\n\n  //     <Row>\n  //       <Col xs={6}>\n  //         Mot de passe\n  //       </Col>\n  //       <Col xs={6}>\n  //         <ProgressBar variant=\"secondary\" now={progresMotdepasse} label={labelMotdepasse} />\n  //       </Col>\n  //     </Row>\n\n  //     <Row>\n  //       <Col xs={6}>\n  //         Cle de MilleGrille\n  //       </Col>\n  //       <Col xs={6}>\n  //         <ProgressBar variant=\"secondary\" now={progresCleMillegrille} label={`${progresCleMillegrille}%`} />\n  //       </Col>\n  //     </Row>\n\n  //     <Row>\n  //       <Col xs={6}>\n  //         Certificat\n  //       </Col>\n  //       <Col xs={6}>\n  //         <ProgressBar variant=\"secondary\" now={progresCertificat} label={`${progresCertificat}%`} />\n  //       </Col>\n  //     </Row>\n\n  //     <pre>\n  //       {props.resultatScan}\n  //     </pre>\n  //   </>\n  // )\n}\n\nfunction assemblerCleChiffree(partiesDeCle) {\n  var cleChiffree = '', nombreParties = Object.keys(partiesDeCle).length\n  for( let idx=1; idx <= nombreParties; idx++ ) {\n    cleChiffree += partiesDeCle[''+idx]\n  }\n\n  // Ajouter separateurs cle chiffree\n  const DEBUT_PRIVATE_KEY = '-----BEGIN ENCRYPTED PRIVATE KEY-----\\n',\n        FIN_PRIVATE_KEY = '\\n-----END ENCRYPTED PRIVATE KEY-----\\n'\n  cleChiffree = DEBUT_PRIVATE_KEY + cleChiffree + FIN_PRIVATE_KEY\n\n  return cleChiffree\n}\n\nfunction assemblerCertificat(partiesDeCertificat) {\n  var certificat = '', nombreParties = Object.keys(partiesDeCertificat).length\n  for( let idx=1; idx <= nombreParties; idx++ ) {\n    certificat += partiesDeCertificat[''+idx]\n  }\n\n  // Ajouter separateurs cle chiffree\n  const DEBUT_CERTIFICATE = '-----BEGIN CERTIFICATE-----\\n',\n        FIN_CERTIFICATE = '\\n-----END CERTIFICATE-----\\n'\n  certificat = DEBUT_CERTIFICATE + certificat + FIN_CERTIFICATE\n\n  return certificat\n}\n\nexport function InformationCertificat(props) {\n  if(props.certificat) {\n    return (\n      <Row>\n        <Col>\n          <p>IDMG : {props.certificat.subject.getField('O').value}</p>\n          <p>Noeud : {props.certificat.subject.getField('CN').value}</p>\n        </Col>\n      </Row>\n    )\n  }\n  return ''\n}\n","import React from 'react'\nimport { Row, Col, Alert } from 'react-bootstrap'\nimport QRCode from 'qrcode.react'\nimport { Trans } from 'react-i18next';\n\nexport class RenderPEM extends React.Component {\n\n  render() {\n    const tailleMaxQR = 800;\n    const qrCodes = [];\n\n    if(this.props.pem) {\n      var lignesPEM = this.props.pem.trim().split('\\n')\n      if(lignesPEM[0].startsWith('---')) {\n        lignesPEM = lignesPEM.slice(1)\n      }\n      const derniereLigne = lignesPEM.length - 1\n      if(lignesPEM[derniereLigne].startsWith('---')) {\n        lignesPEM = lignesPEM.slice(0, derniereLigne)\n      }\n      const pemFiltre = lignesPEM.join('')\n\n      const nbCodes = Math.ceil(pemFiltre.length / tailleMaxQR);\n      const tailleMaxAjustee = pemFiltre.length / nbCodes + nbCodes\n\n      for(let idx=0; idx < nbCodes; idx++) {\n        var debut = idx * tailleMaxAjustee, fin = (idx+1) * tailleMaxAjustee;\n        if(fin > pemFiltre.length) fin = pemFiltre.length;\n        var pemData = pemFiltre.slice(debut, fin);\n        // Ajouter premiere ligne d'info pour re-assemblage\n        pemData = this.props.nom + ';' + (idx+1) + ';' + nbCodes + '\\n' + pemData;\n        qrCodes.push(\n          <Col xs={6} key={idx} className='qr-code'>\n            <QRCode className=\"qrcode\" value={pemData} size={300} />\n          </Col>\n        );\n      }\n    }\n\n    return(\n      <Row>\n        {qrCodes}\n      </Row>\n    );\n  }\n\n}\n\nfunction RenderPair(props) {\n  var certificat = null, clePrivee = null;\n\n  if(props.certificat) {\n    certificat = (\n      <div className=\"pem\">\n        <p>Certificat</p>\n        <RenderPEM pem={props.certificat} nom={props.nom + '.cert'}/>\n      </div>\n    );\n  }\n\n  if(props.clePrivee) {\n    clePrivee = (\n      <div className=\"cle-pem\">\n        <p>{props.idmg}</p>\n\n        <Alert variant=\"warning\">\n          Conserver cette page separement de celle avec le mot de passe.\n        </Alert>\n\n        <p>Cle chiffree de la MilleGrille</p>\n\n        <RenderPEM pem={props.clePrivee} nom={props.nom + '.cle'}/>\n\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {certificat}\n      {clePrivee}\n    </div>\n  );\n\n}\n\nexport function PageBackupCles(props) {\n  if(props.certificatRacine && props.motdepasse && props.cleChiffreeRacine) {\n\n    return (\n      <div>\n        <Row className=\"motdepasse\">\n          <Col lg={8}>\n            <Trans>backup.cles.motDePasse</Trans>\n            <p>{props.motdepasse}</p>\n          </Col>\n          <Col lg={4}>\n            <QRCode value={props.motdepasse} size={75} />\n          </Col>\n        </Row>\n\n        <div className=\"print-only\">\n          <RenderPair\n            certificat={props.certificatRacine}\n            clePrivee={props.cleChiffreeRacine}\n            nom=\"racine\"\n            idmg={props.idmg}\n            />\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>\n  }\n}\n","import React from 'react'\nimport { Container, Row, Col, Button, Alert } from 'react-bootstrap'\n\nimport { genererNouveauCertificatMilleGrille } from '../components/pkiHelper'\nimport { PageBackupCles } from './PemUtils'\nimport { genererUrlDataDownload } from '../components/pemDownloads'\n\nexport class GenererNouvelleCle extends React.Component {\n\n  state = {\n    certificatRacinePret: false,\n    credentialsRacine: '',\n\n    etapeVerifierCle: false,\n    etapeGenererIntermediaire: false,\n    etapeDemarrerInstallation: false,\n    etapeSurveillerInstallation: false,\n\n    idmg: '',\n    backupComplete: false,\n    certPem: '',\n    clePriveePem: '',\n    motdepasseCle: '',\n\n    url: '',\n  }\n\n  componentDidMount() {\n    if( ! this.state.certificatRacinePret ) {\n      // Generer un nouveau certificat racine\n      genererNouveauCertificatMilleGrille()\n      .then( credentialsRacine => {\n\n        console.debug(\"Credentials racine : %O\", credentialsRacine)\n\n        this.setState({\n          certificatRacinePret: true,\n          idmg: credentialsRacine.idmg,\n          certPem: credentialsRacine.certPem,\n          clePriveePem: credentialsRacine.clePriveePem,\n          motdepasseCle: credentialsRacine.motdepasseCle,\n        })\n      })\n      .catch(err=>{\n        console.error(\"Erreur generation nouvelle cle MilleGrille\\n%O\", err)\n      })\n    }\n\n  }\n\n  setCertificatMillegrille = certificatMillegrillePem => {\n    this.setState({certificatMillegrillePem})\n  }\n\n  setCertificatIntermediaire = certificatIntermediairePem => {\n    this.setState({certificatIntermediairePem})\n  }\n\n  setBackupFait = event => {\n    this.setState({backupComplete: true})\n  }\n\n  imprimer = event => {\n    window.print()\n    this.setState({backupComplete: true})\n  }\n\n  render() {\n\n    return (\n      <GenererCle\n        {...this.props}\n        setConfigurationEnCours={this.setConfigurationEnCours}\n        imprimer={this.imprimer}\n        setPage={this.props.setPage}\n        certPem={this.state.certPem}\n        clePriveePem={this.state.clePriveePem}\n        motdepasseCle={this.state.motdepasseCle}\n        idmg={this.state.idmg}\n        setBackupFait={this.setBackupFait}\n        backupComplete={this.state.backupComplete}\n        />\n    )\n\n  }\n\n}\n\nfunction GenererCle(props) {\n\n  var boutonDownload = null\n\n  if(props.idmg) {\n    const {dataUrl} = genererUrlDataDownload(\n      props.idmg,\n      props.certPem,\n      props.clePriveePem\n    )\n\n    var fichierDownload = 'backupCle_' + props.idmg + \".json\";\n    boutonDownload = (\n      <Button href={dataUrl} download={fichierDownload} onClick={props.setBackupFait} variant=\"outline-secondary\">Telecharger cle</Button>\n    );\n  }\n\n  return (\n    <Container>\n\n      <Row>\n        <Col className=\"screen-only\">\n          <h2>Nouvelle cle de MilleGrille</h2>\n        </Col>\n      </Row>\n\n      <Alert variant=\"warning\">\n        <p>\n          Le proprietaire de la MilleGrille est le seul qui devrait etre en\n          possession de cette cle.\n        </p>\n\n        <p>Il ne faut pas perdre ni se faire voler la cle de MilleGrille.</p>\n      </Alert>\n\n      <div>IDMG : {props.idmg}</div>\n\n      <PageBackupCles\n        rootProps={props.rootProps}\n        certificatRacine={props.certPem}\n        motdepasse={props.motdepasseCle}\n        cleChiffreeRacine={props.clePriveePem}\n        idmg={props.idmg}\n        />\n\n      <div className=\"bouton\">\n        <Row>\n          <Col>\n            Utiliser au moins une des deux actions suivantes pour conserver la cle\n            et le certificat de MilleGrille.\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button onClick={props.imprimer} variant=\"outline-secondary\">Imprimer</Button>\n            {boutonDownload}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"boutons-installer\">\n            <Button onClick={props.setPage} value=\"ChargementClePrivee\" disabled={!props.backupComplete}>Suivant</Button>\n            <Button onClick={props.setPage} value='' variant=\"secondary\">Retour</Button>\n          </Col>\n        </Row>\n      </div>\n\n    </Container>\n  )\n\n}\n","export function genererUrlDataDownload(idmg, certificatRacine, cleChiffreeRacine) {\n  const jsonContent = {\n    idmg\n  }\n  // var urlCleRacine = null, urlCertRacine = null;\n\n  const racine = {\n    certificat: certificatRacine,\n    cleChiffree: cleChiffreeRacine,\n  }\n  jsonContent.racine = racine;\n  const stringContent = JSON.stringify(jsonContent);\n\n  const blobFichier = new Blob([stringContent], {type: 'application/json'});\n  let dataUrl = window.URL.createObjectURL(blobFichier);\n  return {dataUrl}\n}\n","import React from 'react'\nimport { Form, Container, Row, Col, Button, InputGroup, FormControl } from 'react-bootstrap'\n\nconst RE_DOMAINE = /^((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+[A-Za-z]{2,6}$/\n\nexport class PageConfigurationInternet extends React.Component {\n  state = {\n    internetDisponible: false,\n\n    domaine: this.props.fqdnDetecte,\n    domaineValide: RE_DOMAINE.test(this.props.fqdnDetecte),\n    domainesAdditionnels: '',\n\n    configurationAvancee: false,\n    modeTest: false,\n    modeCreation: 'webroot',\n\n    cloudns_subauthid: '',\n    cloudns_password: '',\n    dnssleep: '240',\n\n    attenteServeur: false,\n  }\n\n  componentDidMount() {\n    console.debug(\"props : %O\", this.props)\n  }\n\n  setInternetDisponible = event => {\n    console.debug(\"Set internet disponible : %O\", event)\n    const eventInfo = event.currentTarget\n    console.debug(\"Set internet disponible eventInfo: %O\", eventInfo)\n    this.setState({internetDisponible: eventInfo.value === 'true'})\n  }\n\n  changerDomaine = event => {\n    const {value} = event.currentTarget\n    const valide = RE_DOMAINE.test(value)\n    this.setState({domaine: value, domaineValide: valide})\n  }\n\n  changerTextfield = event => {\n    const {name, value} = event.currentTarget\n    this.setState({[name]: value})\n  }\n\n  setCheckbox = event => {\n    const {name, checked} = event.currentTarget\n    this.setState({[name]: checked})\n  }\n\n  setModeCreation = event => {\n    const {value} = event.currentTarget\n    this.setState({modeCreation: value}, ()=>{console.debug(\"State :\\n%O\", this.state)})\n  }\n\n  configurerDomaine = event => {\n    // Transmettre la commande de configuration du domaine\n    const config = {...this.state}\n    if(config.domainesAdditionnels) config.domainesAdditionnels = config.domainesAdditionnels.split(',').map(item=>item.trim())\n    this.props.rootProps.setInfoInternet(config)\n    this.props.setPage({currentTarget: {value:'ConfigurerNoeud'}})\n  }\n\n  revenirPageSaisie = event => {\n    this.setState({attenteServeur: false})\n  }\n\n  render() {\n\n    return (\n      <PageConfigurationDomaineSetup\n        rootProps={this.props.rootProps}\n        domaine={this.state.domaine}\n        domaineValide={this.state.domaineValide}\n        internetDisponible={this.state.internetDisponible}\n        changerDomaine={this.changerDomaine}\n        changerTextfield={this.changerTextfield}\n        setInternetDisponible={this.setInternetDisponible}\n        setCheckbox={this.setCheckbox}\n        configurationAvancee={this.state.configurationAvancee}\n        modeTest={this.state.modeTest}\n        cloudns_subauthid={this.state.cloudns_subauthid}\n        cloudns_password={this.state.cloudns_password}\n        dnssleep={this.state.dnssleep}\n        setModeCreation={this.setModeCreation}\n        modeCreation={this.state.modeCreation}\n        configurerDomaine={this.configurerDomaine} />\n    )\n\n    // if(this.state.attenteServeur) {\n    //   pageAffichee = <PageConfigurationDomaineAttente\n    //                     rootProps={this.props.rootProps}\n    //                     domaine={this.state.domaine}\n    //                     modeCreation={this.state.modeCreation}\n    //                     modeTest={this.state.modeTest}\n    //                     cloudnsSubid={this.state.cloudnsSubid}\n    //                     cloudnsPassword={this.state.cloudnsPassword}\n    //                     retour={this.revenirPageSaisie} />\n    // } else {\n    //   pageAffichee = <PageConfigurationDomaineSetup\n    //                     rootProps={this.props.rootProps}\n    //                     domaine={this.state.domaine}\n    //                     domaineValide={this.state.domaineValide}\n    //                     changerDomaine={this.changerDomaine}\n    //                     changerTextfield={this.changerTextfield}\n    //                     setCheckbox={this.setCheckbox}\n    //                     configurationAvancee={this.state.configurationAvancee}\n    //                     modeTest={this.state.modeTest}\n    //                     cloudnsSubid={this.state.cloudnsSubid}\n    //                     cloudnsPassword={this.state.cloudnsPassword}\n    //                     setModeCreation={this.setModeCreation}\n    //                     modeCreation={this.state.modeCreation}\n    //                     configurerDomaine={this.configurerDomaine} />\n    // }\n    //\n    // return pageAffichee\n  }\n}\n\nfunction PageConfigurationDomaineSetup(props) {\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3>Configurer le domaine de la MilleGrille</h3>\n        </Col>\n      </Row>\n\n      <Form.Group>\n        <Form.Check id=\"installation-internet\">\n          <Form.Check.Input type='checkbox'\n                            name=\"internet-disponible\"\n                            value='true'\n                            onChange={props.setInternetDisponible}\n                            checked={props.internetDisponible} />\n          <Form.Check.Label>Disponible sur internet</Form.Check.Label>\n        </Form.Check>\n      </Form.Group>\n\n      <AfficherFormInternet {...props} />\n\n      <Row className=\"boutons-installer\">\n        <Col>\n          <Button onClick={props.configurerDomaine} value=\"true\" disabled={!props.domaineValide}>Suivant</Button>\n        </Col>\n      </Row>\n\n    </Container>\n  )\n}\n\nfunction AfficherFormInternet(props) {\n\n  if(!props.internetDisponible) return ''\n\n  // var flagDomaineInvalide = null;\n  // if( ! props.domaineValide ) {\n  //   flagDomaineInvalide = <i className=\"fa fa-close btn-outline-danger\"/>\n  // }\n\n  var configurationAvancee = ''\n  if(props.configurationAvancee) {\n    var cloudnsParams = ''\n    if (props.modeCreation === 'dns_cloudns') {\n      cloudnsParams = (\n        <div>\n          <label htmlFor=\"cloudns-subid\">Configuration ClouDNS</label>\n          <InputGroup>\n            <InputGroup.Text id=\"cloudns-subid\">\n              SubID (numero)\n            </InputGroup.Text>\n            <FormControl id=\"cloudns-subid\"\n                         aria-describedby=\"cloudns-subid\"\n                         name=\"cloudns_subauthid\"\n                         value={props.cloudns_subauthid}\n                         onChange={props.changerTextfield} />\n          </InputGroup>\n          <InputGroup>\n            <InputGroup.Text id=\"cloudns-password\">\n              Mot de passe\n            </InputGroup.Text>\n            <FormControl id=\"cloudns-password\"\n                         aria-describedby=\"cloudns-password\"\n                         type=\"password\"\n                         name=\"cloudns_password\"\n                         value={props.cloudns_password}\n                         onChange={props.changerTextfield} />\n          </InputGroup>\n\n          <InputGroup>\n            <InputGroup.Text id=\"dns-sleep\">\n              DNS sleep\n            </InputGroup.Text>\n            <FormControl id=\"dns-sleep\"\n                         aria-describedby=\"dns-sleep\"\n                         name=\"dnssleep\"\n                         value={props.dnssleep}\n                         onChange={props.changerTextfield} />\n          </InputGroup>\n\n        </div>\n      )\n    }\n\n    configurationAvancee = (\n      <div>\n\n        <InputGroup>\n          <InputGroup.Text id=\"domaines-additionnels\">\n            Domaines additionnels\n          </InputGroup.Text>\n          <FormControl \n            id=\"domaines-additionnels\"\n            aria-describedby=\"domaines-additionnels\"\n            name=\"domainesAdditionnels\"\n            value={props.domainesAdditionnels}\n            onChange={props.changerTextfield} />\n        </InputGroup>\n\n        <Form.Check id=\"certificat-test\">\n          <Form.Check.Input type='checkbox' name=\"modeTest\" value='true' onChange={props.setCheckbox} checked={props.modeTest}/>\n          <Form.Check.Label>Certificat de test</Form.Check.Label>\n        </Form.Check>\n\n        <Form.Group controlId=\"modeCreationCertificat\">\n          <Form.Label>Mode de creation certificat</Form.Label>\n          <Form.Control as=\"select\" value={props.modeCreation} onChange={props.setModeCreation}>\n            <option value=\"webroot\">Mode http (port 80)</option>\n            <option value=\"dns_cloudns\">ClouDNS</option>\n          </Form.Control>\n        </Form.Group>\n\n        {cloudnsParams}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <h4>Configuration prealable</h4>\n\n          <ul>\n            <li>Nom de domaine</li>\n            <li>Configurer les ports TCP 443 et 80 sur le routeur</li>\n          </ul>\n\n          <p>\n            Adresse IPv4 detectee pour le noeud : {props.ipDetectee}\n          </p>\n\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <h3>Configuration</h3>\n        </Col>\n      </Row>\n      <Form>\n        <label htmlFor=\"noeud-url\">URL d'acces au noeud {props.flagDomaineInvalide}</label>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"noeud-addon3\">\n            https://\n          </InputGroup.Text>\n          <FormControl id=\"noeud-url\" aria-describedby=\"noeud-addon3\" value={props.domaine} onChange={props.changerDomaine}/>\n        </InputGroup>\n\n        <Form.Check id=\"configuration-avancee\">\n          <Form.Check.Input type='checkbox' name=\"configurationAvancee\" value='true' onChange={props.setCheckbox} checked={props.configurationAvancee}/>\n          <Form.Check.Label>Configuration avancee</Form.Check.Label>\n        </Form.Check>\n\n        {configurationAvancee}\n\n      </Form>\n    </>\n  )\n}\n","import React from 'react'\nimport { Row, Col, Button, Alert } from 'react-bootstrap'\nimport axios from 'axios'\n\nexport class ConfigurationCompletee extends React.Component {\n\n  state = {\n    err: '',\n    attente: false,\n  }\n\n  redemarrer = event => {\n    // Transmettre information d'installation\n    // console.debug(\"Redemarrer, params: %O\", this.props)\n    const infoCertificatNoeudProtege = this.props.rootProps.infoCertificatNoeudProtege,\n          infoClecertMillegrille = this.props.rootProps.infoClecertMillegrille\n\n    const paramsInstallation = {\n      certificatPem: infoCertificatNoeudProtege.pem,\n      chainePem: [infoCertificatNoeudProtege.pem, infoClecertMillegrille.certificat],\n      securite: '3.protege',\n    }\n\n    console.debug(\"Transmettre parametres d'installation: \\n%O\", paramsInstallation)\n\n    axios.post('/installation/api/initialisation', paramsInstallation)\n    .then(response=>{\n      console.debug(\"Recu reponse demarrage installation noeud\\n%O\", response)\n      this.setState({attente: true})\n      setTimeout(_=>{window.location.reload()}, 15000) // Attendre 15 secondes et recharger la page\n    })\n    .catch(err=>{\n      console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n      this.setState({err: ''+err})\n    })\n  }\n\n\n  render() {\n\n    var etat = (\n      <Alert variant=\"success\">\n        <Alert.Heading>Configuration prete</Alert.Heading>\n        <p>\n          La configuration du noeud est prete.\n        </p>\n        <p>\n          Cliquez sur Redemarrer pour lancer l'installation du logiciel.\n        </p>\n      </Alert>\n    )\n    if(this.state.err) {\n      etat = (\n        <Alert variant=\"danger\">\n          <Alert.Heading>Erreur installation</Alert.Heading>\n          <p>{this.state.err}</p>\n        </Alert>\n      )\n    } else if(this.state.attente) {\n      etat = (\n        <Alert variant=\"info\">\n          <p>Redemarrage en cours</p>\n        </Alert>\n      )\n    }\n\n    return (\n      <div>\n        {etat}\n\n        <Row>\n          <Col>\n            <Button onClick={this.redemarrer} disabled={this.state.attente}>Redemarrer</Button>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n\n}\n\n// class EtatInstallation extends React.Component {\n\n//   SERVICES_ATTENDUS = [\n//     'acme', 'nginx',\n//     'mq', 'mongo', 'maitrecles', 'transaction',\n//     'fichiers', 'principal', 'domaines_dynamiques', 'web_protege'\n//   ]\n\n//   // Liste des services qui, s'ils sont actifs, on peut considerer que\n//   // l'installation a reussie\n//   SERVICES_CLES = ['nginx', 'principal', 'web_protege']\n\n//   state = {\n//     erreur: false,\n//     erreurArret: false,\n//     servicesPrets: false,\n//     installationComplete: false,\n//   }\n\n//   componentDidMount() {\n//     this.surveillerProgres()\n//   }\n\n//   terminer = event => {\n//     window.location = '/millegrilles'\n//   }\n\n//   surveillerProgres = async () => {\n//     try {\n//       const reponse = await axios('/installation/api/services')\n//       const dictServices = reponse.data\n\n//       // Comparer liste des services demarres a la liste des services cles\n//       const listeServicesDemarres = Object.keys(dictServices).filter(nomService=>{\n//         var infoService = dictServices[nomService]\n//         return infoService.message_tache === 'started'\n//       })\n//       const listeServicesClesDemarres = listeServicesDemarres.filter(nomService=>{\n//         return this.SERVICES_CLES.includes(nomService)\n//       })\n//       const servicesPrets = listeServicesClesDemarres.length === this.SERVICES_CLES.length\n//       const installationComplete = listeServicesDemarres.length === this.SERVICES_ATTENDUS.length\n\n//       // Conserver information\n//       this.setState({...dictServices, installationComplete, servicesPrets, erreur: false}, ()=>{\n//         if(!installationComplete) {\n//           setTimeout(this.surveillerProgres, 5000)\n//         } else {\n//           console.debug(\"Installation complete\")\n//         }\n//       })\n\n//     } catch(err) {\n//       console.error(\"Erreur verification etat des services\\n%O\", err)\n\n//       if(!this.state.erreur) {\n//         this.setState({erreur: true, erreurMessage: err.message})\n//         setTimeout(this.surveillerProgres, 20000)  // 20 secondes avant de reessayer\n//       } else {\n//         console.error(\"2e erreur de rafraichissement, on arrete. Echec installation.\")\n//         this.setState({erreurArret: true, erreurMessage: err.message})\n//       }\n//     } finally {\n\n//     }\n//   }\n\n//   render() {\n\n//     const complet = <i key=\"spinner\" className=\"fa fa-check-square fa-2x fa-fw btn-outline-success\"/>\n\n//     var compteServicesDemarres = 0\n\n//     const listeServices = this.SERVICES_ATTENDUS.map( nomService => {\n\n//       var infoService = this.state[nomService]\n//       var etat = ''\n//       if(infoService && infoService.message_tache === 'started') {\n//         etat = complet\n//         compteServicesDemarres++\n//       }\n\n//       return (\n//         <Row key={nomService}>\n//           <Col xs={10}>\n//             {nomService}\n//           </Col>\n//           <Col xs={2}>\n//             {etat}\n//           </Col>\n//         </Row>\n//       )\n//     })\n\n//     const pctProgres = Math.abs(compteServicesDemarres * 100 / this.SERVICES_ATTENDUS.length)\n\n//     return (\n//       <Container>\n//         <h2>Installation en cours</h2>\n//         <p>Progres : {pctProgres}%</p>\n\n//         <h3>Services</h3>\n//         {listeServices}\n\n//         <Button onClick={this.terminer} disabled={!this.state.servicesPrets}>Terminer</Button>\n//       </Container>\n//     )\n//   }\n// }\n","import React from 'react'\nimport { Row, Col, Button, InputGroup, FormControl } from 'react-bootstrap'\n\nexport class ConfigurerNoeudIdmg extends React.Component {\n\n  state = {\n    idmg: '',\n  }\n\n  componentDidMount() {\n    if(this.props.rootProps.idmg) {\n      console.debug(\"ConfigurerNoeudIdmg IDMG = %s, aller a la page suivante\", this.props.rootProps.idmg)\n      this.props.setPage({currentTarget: {value: 'ConfigurerNoeud'}})\n    }\n  }\n\n  changerChamp = event => {\n    const {name, value} = event.currentTarget\n    this.setState({[name]: value})\n  }\n\n  suivant = event => {\n    console.debug(\"Props - %O\", this.props)\n    this.props.setIdmg(this.state.idmg)\n    this.props.setPage(event)\n  }\n\n  render() {\n\n    var pageSuivante = 'ConfigurerNoeud'\n    // if(this.props.internetDisponible) {\n    //   pageSuivante = 'PageConfigurationInternet'\n    // }\n\n    return (\n      <>\n        <h2>Configurer IDMG</h2>\n\n        <p>Saisir le IDMG pour empecher un tiers de prendre possession du noeud</p>\n\n        <FormIdmg idmg={this.state.idmg}\n                  changerChamp={this.changerChamp} />\n\n        <Row>\n          <Col>\n            <Button onClick={this.suivant} value={pageSuivante}>Suivant</Button>\n            <Button variant=\"secondary\">Retour</Button>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n\n}\n\nfunction FormIdmg(props) {\n  return (\n    <InputGroup className=\"mb-3\">\n      <InputGroup.Text id=\"idmg\">\n        IDMG du noeud\n      </InputGroup.Text>\n      <FormControl id=\"idmg\"\n                   aria-describedby=\"idmg\"\n                   name=\"idmg\"\n                   value={props.idmg}\n                   onChange={props.changerChamp} />\n    </InputGroup>\n  )\n}\n","import React from 'react'\nimport {Container, Row, Col, Button, Alert} from 'react-bootstrap'\nimport axios from 'axios'\nimport https from 'https'\n\nimport { InformationCertificat } from './ChargerCleCert'\n\nexport class ConfigurerNoeud extends React.Component {\n\n  render() {\n    console.debug(\"ConfigurerNoeud props : %O\", this.props)\n    const typeNoeud = this.props.typeNoeud\n\n    // Note : le noeud public doit etre configure avec internet\n\n    if(this.props.rootProps.internetDisponible) {\n      // Configuration du noeud avec certificat web SSL\n      // Combine l'installation du certificat et du noeud en un appel\n      return (\n        <PageConfigurationDomaineAttente {...this.props} />\n      )\n    } else if(typeNoeud === 'protege') {\n      return (\n        <InstallerNoeudProtege {...this.props} />\n      )\n    } else if(typeNoeud === 'prive') {\n      return (\n        <ConfigurerNoeudPrive {...this.props} />\n      )\n    } else if(typeNoeud === 'public') {\n      return (\n        <ConfigurerNoeudPublic {...this.props} />\n      )\n    }\n    return (<Alert variant=\"danger\">Type noeud inconnu</Alert>)\n  }\n}\n\nfunction ConfigurerNoeudPrive(props) {\n\n  const installer = event => {\n    configurerNoeudPrive(props, {}, err=>{\n      if(err) {\n        console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n        return\n      }\n      // Recharger page apres 15 secondes\n      setTimeout(_=>{window.location.reload()}, 2000)\n    })\n  }\n\n  const idmg = props.idmg\n\n  return (\n    <>\n      <h2>Finaliser la configuration</h2>\n\n      <h3>Noeud prive</h3>\n      <p>Idmg : {idmg}</p>\n\n      <Row>\n        <Col className=\"bouton\">\n          <Button onClick={installer} value=\"true\">Demarrer installation</Button>\n          <Button onClick={props.precedent} value='false' variant=\"secondary\">Precedent</Button>\n        </Col>\n      </Row>\n    </>\n  )\n\n}\n\nfunction ConfigurerNoeudPublic(props) {\n  const installer = event => {\n    configurerNoeudPublic(props, {}, err=>{\n      if(err) {\n        console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n        return\n      }\n      // Recharger page apres 15 secondes\n      setTimeout(_=>{window.location.reload()}, 2000)\n    })\n  }\n\n  const idmg = props.idmg\n\n  return (\n    <>\n      <h2>Finaliser la configuration</h2>\n\n      <h3>Noeud public</h3>\n      <p>Idmg : {idmg}</p>\n\n      <Row>\n        <Col className=\"bouton\">\n          <Button onClick={installer} value=\"true\">Demarrer installation</Button>\n          <Button onClick={props.precedent} value='false' variant=\"secondary\">Precedent</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction InstallerNoeudProtege(props) {\n\n  const installer = event => {\n    installerNoeudProtege(props, {}, err=>{\n      if(err) {\n        console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n        return\n      }\n      console.debug(\"Recu reponse demarrage installation noeud\")\n      // Recharger page apres 15 secondes\n      setTimeout(_=>{window.location.reload()}, 15000)\n    })\n  }\n\n  const intermediaireCert = props.rootProps.intermediaireCert\n\n  return (\n    <Container>\n      <h2>Finaliser la configuration</h2>\n\n      <h3>Certificat du noeud</h3>\n      <InformationCertificat certificat={intermediaireCert} />\n\n      <Row>\n        <Col className=\"bouton\">\n          <Button onClick={installer} value=\"true\">Demarrer installation</Button>\n          <Button onClick={props.precedent} value='false' variant=\"secondary\">Precedent</Button>\n        </Col>\n      </Row>\n    </Container>\n  )\n\n}\n\nclass PageConfigurationDomaineAttente extends React.Component {\n\n  state = {\n    resultatTestAccesUrl: false,\n    domaineConfigure: false,\n    certificatRecu: false,\n    serveurWebRedemarre: false,\n\n    erreur: false,\n    messageErreur: '',\n    stackErreur: '',\n\n  }\n\n  componentDidMount() {\n    // Lancer le processus de configuration\n    this.testerAccesUrl()\n  }\n\n  testerAccesUrl = async () => {\n    this.setState({\n      resultatTestAccesUrl: false,\n      domaineConfigure: false,\n      certificatRecu: false,\n      compteurAttenteCertificatWeb: 0,\n      compteurAttenteRedemarrageServeur: 0,\n\n      erreur: false,\n      messageErreur: '',\n      stackErreur: '',\n    })\n\n    // const urlDomaine = 'https://' + this.props.domaine + '/installation/api/infoMonitor'\n    const urlDomaine = '/installation/api/info'\n\n    // Creer instance AXIOS avec timeout court (5 secondes) et\n    // qui ignore cert SSL (... parce que c'est justement ce qu'on va installer!)\n    const instanceAxios = axios.create({\n      timeout: 5000,\n      httpsAgent: new https.Agent({ keepAlive: true, rejectUnauthorized: false, }),\n    });\n\n    try {\n      const reponseTest = await instanceAxios.get(urlDomaine)\n      console.debug(\"Reponse test\\n%O\", reponseTest)\n      this.setState({resultatTestAccesUrl: true}, ()=>{\n        this.configurerDomaine()\n      })\n    } catch (err) {\n      console.error(\"Erreur connexion\\n%O\", err)\n      this.setState({erreur: true, messageErreur: err.message, stackErreur: err.stack})\n    }\n\n  }\n\n  async configurerDomaine() {\n    const infoInternet = this.props.rootProps.infoInternet\n    console.debug(\"Configurer le domaine %s\", infoInternet)\n\n    const paramsDomaine = {\n      domaine: infoInternet.domaine,\n      modeTest: infoInternet.modeTest,\n    }\n\n    if(this.props.modeCreation === 'dns_cloudns') {\n      paramsDomaine['modeCreation'] = infoInternet.modeCreation\n      paramsDomaine['cloudnsSubid'] = infoInternet.cloudnsSubid\n      paramsDomaine['cloudnsPassword'] = infoInternet.cloudnsPassword\n    }\n\n    try {\n      //const reponseCreation = await axios.post('/installation/api/configurerDomaine', paramsDomaine)\n      // console.debug(\"Transmettre parametres d'installation, domaine web: \\n%O\", paramsDomaine)\n\n      const callback = err => {\n        if(err) {\n          console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n          this.setState({err: ''+err})\n          return\n        }\n        this.setState({domaineConfigure: true}, ()=>{\n          // Declencher attente du certificat\n          this.attendreCertificatWeb()\n        })\n      }\n\n      if(this.props.typeNoeud === 'protege') {\n        installerNoeudProtege(this.props, paramsDomaine, callback)\n      } else if(this.props.typeNoeud === 'prive') {\n        configurerNoeudPrive(this.props, paramsDomaine, callback)\n      } else if(this.props.typeNoeud === 'public') {\n        configurerNoeudPublic(this.props, paramsDomaine, callback)\n      }\n\n    } catch(err) {\n      console.error(\"Erreur configuration domaine\\n%O\", err)\n      this.setState({erreur: true, messageErreur: err.message, stackErreur: err.stack})\n    }\n\n  }\n\n  attendreCertificatWeb = async() => {\n    console.debug(\"Attente certificat web - debut\")\n\n    if(this.state.compteurAttenteCertificatWeb > 25) {\n      // Echec, timeout\n      this.setState({erreur: true, messageErreur:'Timeout attente certificat SSL'})\n      return\n    }\n\n    console.debug(\"Attente certificat web\")\n    try {\n      const reponse = await axios.get('/installation/api/etatCertificatWeb')\n      if(!reponse.data.pret) {\n        console.debug(\"Certificat n'est pas pret\")\n        this.setState({compteurAttenteCertificatWeb: this.state.compteurAttenteCertificatWeb + 1 })\n        setTimeout(this.attendreCertificatWeb, 5000) // Reessayer dans 5 secondes\n      } else {\n        console.debug(\"Certificat pret\")\n        this.setState({certificatRecu: true}, ()=>{\n          // Declencher attente du redemarrage du serveur\n          setTimeout(this.attendreRedemarrageServeur, 15000) // Verifier dans 15 secondes\n        })\n      }\n    } catch(err) {\n      console.error(\"Erreur configuration domaine\\n%O\", err)\n      this.setState({erreur: true, messageErreur: err.message, stackErreur: err.stack})\n    }\n\n  }\n\n  attendreRedemarrageServeur = async() => {\n    console.debug(\"Attente redemarrage serveur - debut\")\n\n    if(this.state.compteurAttenteRedemarrageServeur > 10) {\n      // Echec, timeout\n      this.setState({erreur: true, messageErreur:'Timeout redemarrage serveur'})\n      return\n    }\n\n    console.debug(\"Attente redemarrage web\")\n    try {\n      await axios.get('/installation/api/etatCertificatWeb')\n      console.debug(\"Certificat pret\")\n      this.setState({serveurWebRedemarre: true}, ()=>{\n        // Declencher attente du certificat\n        this.configurationCompletee()\n      })\n    } catch(err) {\n      console.error(\"Erreur test nouveau certificat serveur\\n%O\", err)\n      setTimeout(this.attendreRedemarrageServeur, 5000) // Reessayer dans 10 secondes\n      this.setState({compteurAttenteRedemarrageServeur: this.state.compteurAttenteRedemarrageServeur + 1 })\n    }\n\n  }\n\n  configurationCompletee = async() => {\n    console.debug(\"Configuration completee\")\n  }\n\n  render() {\n\n    const etapes = []\n    var spinner = ''\n    if(this.state.erreur) {\n      spinner = <i className=\"fa fa-close fa-2x btn-outline-danger\"/>\n    } else {\n      spinner = <i key=\"spinner\" className=\"fa fa-spinner fa-pulse fa-2x fa-fw\"/>\n    }\n    const complet = <i key=\"spinner\" className=\"fa fa-check-square fa-2x fa-fw btn-outline-success\"/>\n\n    const etatTest = this.state.resultatTestAccesUrl?complet:spinner\n    etapes.push(<li key=\"1\">Verifier acces au serveur {this.props.domaine} {etatTest}</li>)\n\n    if(this.state.resultatTestAccesUrl) {\n      const etatConfigurationDomaine = this.state.domaineConfigure?complet:spinner\n      etapes.push(<li key=\"2\">Configuration du domaine {etatConfigurationDomaine}</li>)\n    }\n    if(this.state.domaineConfigure) {\n      const etatConfigurationSsl = this.state.certificatRecu?complet:spinner\n      etapes.push(<li key=\"3\">Configuration du certificat SSL {etatConfigurationSsl}</li>)\n    }\n    if(this.state.certificatRecu) {\n      etapes.push(<li key=\"4\">Certificat recu, serveur pret {complet}</li>)\n    }\n\n    var page = ''\n    if(this.state.erreur) {\n      page = <AfficherErreurConnexion\n              domaine={this.props.domaine}\n              retour={this.props.retour}\n              reessayer={this.testerAccesUrl}\n              {...this.state} />\n    }\n\n    return (\n      <>\n        <h3>Configuration en cours ...</h3>\n        <ol>\n          {etapes}\n        </ol>\n        {page}\n      </>\n    )\n  }\n}\n\nfunction AfficherErreurConnexion(props) {\n  return (\n    <>\n      <Alert variant=\"danger\">\n        <Alert.Heading>Erreur de connexion au domaine demande</Alert.Heading>\n        <p>Domaine : {props.domaine}</p>\n        <hr />\n        <p>{props.messageErreur}</p>\n      </Alert>\n      <Row>\n        <Col>\n          <Button onClick={props.retour}>Retour</Button>\n          <Button onClick={props.reessayer}>Reessayer</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nasync function installerNoeudProtege(props, params, callback) {\n  console.debug(\"Pour installation, proppys!\\n%O\", props)\n\n  const idmg = props.idmg || props.rootProps.idmg,\n        intermediairePem = props.rootProps.intermediairePem,\n        certificatMillegrillePem = props.rootProps.infoClecertMillegrille.certificat\n\n//throw new Error(\"fix me\")\n\n  // Set certificat intermediaire dans le certissuer\n  // const paramsIssuer = {\n  //   idmg,\n  //   chainePem: [infoCertificatNoeudProtege.pem, infoClecertMillegrille.certificat],\n  // }\n  // await axios.post('/certissuer/issuer', paramsIssuer)\n  // .then(reponse=>{\n  //   console.debug(\"Recu reponse demarrage installation noeud\\n%O\", reponse)\n  //   callback() // Aucune erreur\n  // })\n  // .catch(err=>{\n  //   console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n  //   callback(err)\n  // })\n\n  var paramsInstallation = {\n    ...params,\n    // certificatMillegrillePem: this.props.certificatMillegrillePem,\n    // certificatPem: infoCertificatNoeudProtege.pem,\n    idmg,\n    // chainePem: [intermediairePem, certificatMillegrillePem],\n    certificatMillegrille: certificatMillegrillePem,\n    certificatIntermediaire: intermediairePem,\n    securite: '3.protege',\n  }\n\n  if(props.rootProps.infoInternet) {\n    // Ajouter les parametres de configuration internet\n    paramsInstallation = {...props.rootProps.infoInternet, ...paramsInstallation}\n  }\n\n  axios.post('/installation/api/installer', paramsInstallation)\n  .then(reponse=>{\n    console.debug(\"Recu reponse demarrage installation noeud\\n%O\", reponse)\n    callback() // Aucune erreur\n  })\n  .catch(err=>{\n    console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n    callback(err)\n  })\n\n}\n\nasync function configurerNoeudPrive(props, params, callback) {\n\n  const infoInternet = props.rootProps.infoInternet\n\n  var paramsInstallation = {\n    ...params,\n    idmg: props.idmg,\n    securite: '2.prive',\n  }\n  console.debug(\"Transmettre parametres installation noeud prive : %O\", paramsInstallation)\n\n  if(infoInternet) {\n    // Ajouter les parametres de configuration internet\n    paramsInstallation = {...props.rootProps.infoInternet, ...paramsInstallation}\n  }\n\n  axios.post('/installation/api/configurerIdmg', paramsInstallation)\n  .then(reponse=>{\n    console.debug(\"Recu reponse demarrage installation noeud\\n%O\", reponse)\n    callback() // Aucune erreur\n  })\n  .catch(err=>{\n    console.error(\"Erreur demarrage installation noeud\\n%O\", err)\n    callback(err)\n  })\n\n}\n\nasync function configurerNoeudPublic(props, params, callback) {\n\n  const paramsInstallation = {\n    ...params,\n    idmg: props.idmg,\n    securite: '1.public',\n  }\n  console.debug(\"Transmettre parametres installation noeud public : %O\", paramsInstallation)\n\n  axios.post('/installation/api/configurerIdmg', paramsInstallation)\n  .then(reponse=>{\n    console.debug(\"Recu reponse demarrage installation noeud public\\n%O\", reponse)\n    callback() // Aucune erreur\n  })\n  .catch(err=>{\n    console.error(\"Erreur demarrage installation noeud public\\n%O\", err)\n    callback(err)\n  })\n\n}\n","import React from 'react'\nimport axios from 'axios'\n// import https from 'https'\n// import { Form, Container, Row, Col, Button, InputGroup, FormControl, Alert } from 'react-bootstrap';\n\n// import { InstallationNouvelle } from './InstallationNouvelle'\nimport { SelectionnerTypeNoeud } from './SelectionTypeNoeud'\nimport { ChargementClePrivee } from './ChargerCleCert'\nimport { GenererNouvelleCle } from './GenererNouvelleCle'\nimport { PageConfigurationInternet } from './ConfigurationInternet'\nimport { ConfigurationCompletee } from './PagesEtat'\nimport { ConfigurerNoeudIdmg } from './ConfigurationNoeudIdmg'\nimport { ConfigurerNoeud } from './ConfigurationNoeud'\n\nconst RE_DOMAINE = /^((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+[A-Za-z]{2,6}$/\nconst MAPPING_PAGES = {\n  SelectionnerTypeNoeud,\n  ChargementClePrivee,\n  GenererNouvelleCle,\n  PageConfigurationInternet,\n  ConfigurationCompletee,\n  ConfigurerNoeud,\n  ConfigurerNoeudIdmg,\n}\n\nexport class Installation extends React.Component {\n\n  state = {\n    infoMonitorChargee: false,\n    erreurAcces: false,\n\n    domaine: '',\n    typeNoeud: '',\n\n    page: 'SelectionnerTypeNoeud',\n\n    fqdnDetecte: '',\n    idmg: '',\n  }\n\n  componentDidMount() {\n    // Lire etat de l'installation de la MilleGrille\n    axios.get('/installation/api/info')\n    .then(reponse=>{\n      console.debug(\"Reponse recue\\n%O\", reponse)\n      const dataReponse = reponse.data\n\n      const info = {\n        idmg: dataReponse.idmg,\n        domaine: dataReponse.domaine,\n        securite: dataReponse.securite,\n        noeudId: dataReponse.instance_id,\n        certificat: dataReponse.certificat,\n        ca: dataReponse.ca,\n      }\n\n      var typeNoeud = this.state.typeNoeud\n      if(info.securite) {\n        typeNoeud = info.securite.split('.')[1]\n      }\n\n      this.props.rootProps.setInfo(info)\n\n      var domaineDetecte = window.location.hostname\n      if( ! RE_DOMAINE.test(domaineDetecte) ) {\n        domaineDetecte = dataReponse.fqdn_detecte\n      }\n\n      // Set page courante selon etat de configuration\n      var page = this.state.page\n      if( ! info.securite ) {\n        console.debug(\"Ouvrir configuration type noeud\")\n        page = 'SelectionnerTypeNoeud'\n      } else if( ! info.idmg && info.securite === '3.protege' ) {\n        console.debug(\"Ouvrir configuration idmg\")\n        page = 'ChargementClePrivee'  // Page config cle MilleGrille\n      } else if( ! info.idmg ) {\n        page = 'ConfigurerNoeudIdmg'  // Page set IDMG\n      } else if( ! info.domaine ) {\n        console.debug(\"Ouvrir configuration domaine internet\")\n        page = 'PageConfigurationInternet'\n      }\n\n      this.setState({\n        infoMonitorChargee: true,\n        erreurAcces: false,\n        fqdnDetecte: domaineDetecte,\n        ipDetectee: dataReponse.ip_detectee,\n        domaine: dataReponse.domaine,\n        page, typeNoeud,\n      })\n    })\n    .catch(err=>{\n      console.error(\"Erreur lecture info monitor\\n%O\", err)\n      this.setState({infoMonitorChargee: false, erreurAcces: true})\n    })\n  }\n\n  setPage = event => { \n    const page = event.currentTarget.value\n    console.debug(\"Page : %s\", page)\n    this.setState({page}) \n  }\n\n  setTypeNoeud = event => {\n    this.setState({typeNoeud: event.currentTarget.value})\n  }\n\n  setIdmg = idmg => {\n    this.setState({idmg})\n  }\n\n  afficherPageTypeInstallation = event => {\n    // Transfere l'ecran a la page selon le type d'installation choisi (noeud, internet)\n    console.debug(\"Affiche page, etat %O\", this.state)\n    if(this.state.typeNoeud === 'protege') {\n      this.setState({page: 'ChargementClePrivee'})\n    } else if(['prive', 'public'].includes(this.state.typeNoeud)) {\n      this.setState({page: 'ConfigurerNoeudIdmg'})\n    }\n\n  }\n\n  render() {\n    console.debug(\"!!! Info monitor state : %O\", this.state)\n    if(this.state.infoMonitorChargee) {\n      // Domaine est configure, on procede a l'installation\n      var Page = SelectionnerTypeNoeud\n\n      if(this.state.page) {\n        Page = MAPPING_PAGES[this.state.page]\n      }\n\n      var pageInstallation = (\n        <Page rootProps={this.props.rootProps}\n              setPage={this.setPage}\n              setTypeNoeud={this.setTypeNoeud}\n              setIdmg={this.setIdmg}\n              setInternetDisponible={this.setInternetDisponible}\n              afficherPageTypeInstallation={this.afficherPageTypeInstallation}\n              {...this.state} />\n      )\n\n      return pageInstallation\n    } else {\n      return <PageAttente />\n    }\n\n  }\n\n}\n\nfunction PageAttente(props) {\n  return (\n    <p>Chargement en cours</p>\n  )\n}\n","import React, {useState, useCallback, useEffect} from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport axios from 'axios'\n\nimport {ChargementClePrivee} from './ChargerCleCert'\n\nexport default function RenouvellementIntermediaire(props) {\n\n  const [csr, setCsr] = useState('')\n\n  const { intermediairePem } = props.rootProps\n  const infoClecertMillegrille = props.rootProps.infoClecertMillegrille\n  const certificatPem = infoClecertMillegrille.certificat\n\n  const [confirmation, setConfirmation] = useState('')\n  const [erreur, setErreur] = useState('')\n\n  const erreurCb = useCallback((err, message)=>setErreur({err, message}), [setErreur])\n\n  useEffect(()=>{\n    demanderCsr().then(csr=>{\n      setCsr(csr)\n    }).catch(e=>{\n      console.error(\"Erreur preparation CSR : %O\", e)\n      erreurCb(''+e)\n    })\n  }, [setCsr, erreurCb])\n\n  return (\n    <>\n      <h2>Renouveller certificat intermediaire</h2>\n\n      <br/>\n\n      {csr!==''?\n        <ChargementClePrivee rootProps={props.rootProps} csr={csr} cacherBoutons={true} />\n        :<p>Preparation du CSR en cours ...</p>\n      }\n\n      {intermediairePem?\n        <>\n          <p>Nouveau certificat intermediaire</p>\n          <pre>{intermediairePem}</pre>\n        </>\n        :''\n      }\n\n      {certificatPem?\n        <>\n          <p>Nouveau certificat instance</p>\n          <pre>{certificatPem}</pre>\n        </>\n      :''}\n\n      <br/>\n      <Button variant=\"secondary\" onClick={()=>props.changerPage('Installation')}>Retour</Button>\n      <Button disabled={!(intermediairePem && certificatPem)}\n              onClick={()=>soumettreIntermediaire({...props, erreurCb, confirmationCb: setConfirmation})}>\n        Soumettre\n      </Button>\n\n      <br/>\n\n      <Alert show={confirmation!==''} variant=\"success\">\n          <Alert.Heading>Succes</Alert.Heading>\n          <p>{confirmation}</p>\n      </Alert>\n\n      <Alert show={erreur?true:false} variant=\"danger\">\n          <Alert.Heading>Erreur</Alert.Heading>\n          <p>{erreur?erreur.message:''}</p>\n          <pre>{erreur.err?erreur.err.stack:''}</pre>\n      </Alert>\n\n    </>\n  )\n}\n\nasync function demanderCsr() {\n  console.debug(\"Charger csr\")\n\n  // const urlCsr = '/installation/api/csrIntermediaire'\n  const urlCsr = '/installation/api/csr'\n  const csrResponse = await axios.get(urlCsr)\n  console.debug(\"CSR recu : %O\", csrResponse)\n  if(csrResponse.status !== 200) {\n    throw new Error(\"Erreur axios code : %s\", csrResponse.status)\n  }\n  return csrResponse.data\n}\n\nasync function soumettreIntermediaire(props) {\n\n  console.debug(\"soumettreIntermediaire proppys!\\n%O\", props)\n\n  const { confirmationCb, erreurCb } = props\n\n  const idmg = props.rootProps.idmg,\n        intermediairePem = props.rootProps.intermediairePem,\n        infoClecertMillegrille = props.rootProps.infoClecertMillegrille\n\n  var paramsInstallation = {\n    idmg,\n    // chainePem: [intermediairePem, infoClecertMillegrille.certificat],\n    securite: '3.protege',\n    certificatIntermediaire: intermediairePem,\n    certificatMillegrille: infoClecertMillegrille.certificat,\n  }\n\n  if(props.rootProps.infoInternet) {\n    // Ajouter les parametres de configuration internet\n    paramsInstallation = {...props.rootProps.infoInternet, ...paramsInstallation}\n  }\n\n  await axios.post('/installation/api/installer', paramsInstallation)\n  .then(reponse=>{\n    console.debug(\"Configuration appliquee avec succes\\n%O\", reponse)\n    confirmationCb('Configuration appliquee avec succes')\n  })\n  .catch(err=>{\n    console.error(\"Erreur application du certificat/configuration \\n%O\", err)\n    erreurCb(err, 'Erreur application du certificat/configuration')\n    throw err\n  })\n\n\n  // const urlCsr = '/certissuer/issuer'\n  // const params = {pem}\n  // console.debug(\"Soumettre vers %s : %O\", urlCsr, params)\n  // const response = await axios.post(urlCsr, params)\n  // console.debug(\"Response : %O\", response)\n  // if(response.status !== 200) {\n  //   throw new Error(\"Erreur axios code : %s\", response.status)\n  // }\n}\n","import React, {useState, useEffect, useCallback, useMemo} from 'react'\nimport './App.css'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport QRCode from 'qrcode.react'\n\nimport {pki as forgePki} from '@dugrema/node-forge'\nimport { forgecommon } from '@dugrema/millegrilles.reactjs'\nimport { getIdmg } from '@dugrema/millegrilles.utiljs/src/idmg'\n\nimport { LayoutMillegrilles } from './Layout'\nimport { Installation } from './Installation'\nimport RenouvellementIntermediaire from './RenouvellementIntermediaire'\n\nconst { splitPEMCerts, extraireExtensionsMillegrille } = forgecommon\n\n// const MAPPING_PAGES = { Installation, RenouvellementIntermediaire }\n\nfunction App(props) {\n\n  const [idmg, setIdmg] = useState('')\n  const [info, setInfo] = useState('')\n  const [infoInternet, setInfoInternet] = useState('')\n  const [page, setPage] = useState('Installation')\n  const [infoClecertMillegrille, setInfoClecertMillegrille] = useState('')\n  const [intermediairePem, setIntermediairePem] = useState('')\n  const [intermediaireCert, setIntermediaireCert] = useState('')\n  const [manifest, setManifest] = useState({})\n\n  const PageMappee = useMemo(()=>{\n    let pageMappee = Installation\n    switch(page) {\n      case 'AfficherInformationNoeud': pageMappee = AfficherInformationNoeud; break\n      case 'RenouvellementIntermediaire': pageMappee = RenouvellementIntermediaire; break\n      default:\n    }\n    return pageMappee\n  }, [page])\n\n  const conserverInfo = useCallback(info => {\n    if(info.securite && info.idmg) {  // Securite indique que le noeud est deja configure\n      console.debug(\"Configuration MilleGrille completee : %O\", info)\n      setPage('AfficherInformationNoeud')\n    }\n    // this.setState(info)\n    setInfo(info)\n  }, [setPage, setInfo])\n\n  const changerInfoClecertMillegrille = useCallback(infoClecertMillegrille => {\n    // this.setState({infoClecertMillegrille, idmg: infoClecertMillegrille.idmg})\n    setInfoClecertMillegrille(infoClecertMillegrille)\n    setIdmg(infoClecertMillegrille.idmg)\n  }, [setInfoClecertMillegrille, setIdmg])\n\n  const setInfoCertificatNoeudProtege = useCallback((pem, cert) => {\n    console.debug(\"Certificat intermediaire PEM\\n%s\", pem)\n    setIntermediairePem(pem)\n    setIntermediaireCert(cert)\n    // this.setState({intermediairePem: pem, intermediaireCert: cert})\n  }, [setIntermediairePem, setIntermediaireCert])\n\n  // console.debug(\"Nom usager : %s, estProprietaire : %s\", this.state.nomUsager, this.state.estProprietaire)\n\n  const rootProps = {\n    idmg, info, infoInternet, infoClecertMillegrille, \n    intermediairePem, intermediaireCert,\n    manifest,\n\n    setInfo: conserverInfo,\n    setInfoClecertMillegrille: changerInfoClecertMillegrille,\n    setInfoCertificatNoeudProtege,\n    setInfoInternet,\n    setManifest,\n    // setIdmg,\n  }\n\n  let affichage = <PageMappee rootProps={rootProps} changerPage={setPage} />\n  return (\n    <LayoutApplication\n      changerPage={setPage}\n      affichage={affichage}\n      rootProps={rootProps} />\n  )\n\n}\n\n// Layout general de l'application\nfunction LayoutApplication(props) {\n\n  var qrCode = null\n  if(props.rootProps.idmgCompte) {\n    qrCode = <QRCode value={'idmg:' + props.rootProps.idmg} size={75} />\n  }\n\n  const pageAffichee = (\n    <div>\n      <h1>Installation MilleGrille</h1>\n      <Row>\n        <Col sm={10}>\n          <p className='idmg'>{props.rootProps.idmg}</p>\n        </Col>\n        <Col sm={2} className=\"footer-right\">{qrCode}</Col>\n      </Row>\n\n      {props.affichage}\n    </div>\n  )\n\n  return (\n    <LayoutMillegrilles changerPage={props.changerPage} page={pageAffichee} rootProps={props.rootProps}/>\n  )\n}\n\n// function _setTitre(titre) {\n//   document.title = titre\n// }\n\nfunction AfficherInformationNoeud(props) {\n\n  const info = props.rootProps.info || {}\n  const { securite, domaine } = info\n  const pemCertificat = info.certificat\n  const pemCa = info.ca\n\n  // const pemCertificat = props.rootProps.certificat\n  // const pemCa = props.rootProps.ca\n\n  const [certificat, setCertificat] = useState()\n  const [certificatIntermediaire, setCertificatIntermediaire] = useState()\n  const [idmgCalcule, setIdmgCalcule] = useState()\n  const [extensions, setExtensions] = useState()\n\n  useEffect(()=>{\n    if(pemCertificat) {\n      console.debug(\"Lecture du certificat %O\", pemCertificat)\n      let pems = pemCertificat\n      if(typeof(pemCertificat) === 'string') pems = splitPEMCerts(pemCertificat)\n      const cert = forgePki.certificateFromPem(pems[0])\n      const interCert = forgePki.certificateFromPem(pems[1])\n      console.debug(\"Cert : %O, inter : %O\", cert, interCert)\n      setCertificat(cert)\n      setCertificatIntermediaire(interCert)\n      const exts = extraireExtensionsMillegrille(cert)\n      console.debug(\"Extensions : %O\", exts)\n      setExtensions(exts)\n    }\n  }, [pemCertificat])\n  useEffect(()=>{\n    if(pemCa) {\n      getIdmg(pemCa).then(idmg=>{\n        setIdmgCalcule(idmg)\n      })\n    }\n  }, [pemCa])\n\n  console.debug(\"Props - %O\", props)\n\n  let certificatExpire, certificatJoursExpiration, intermediaireExpire\n  const maintenant = new Date().getTime()\n  const msJour = 24 * 60 * 60000\n  if(certificat) {\n    const tempsExpiration = certificat.validity.notAfter.getTime()\n    certificatExpire = tempsExpiration < maintenant\n    certificatJoursExpiration = Math.floor(Math.min((tempsExpiration - maintenant) / msJour))\n    console.debug(\"Jours expiration : %O\", certificatJoursExpiration)\n    if(certificatJoursExpiration < 1) certificatJoursExpiration = null\n  }\n  if(certificatIntermediaire) {\n    intermediaireExpire = certificatIntermediaire.validity.notAfter.getTime() < maintenant\n  }\n\n  const listeInfo = []\n  listeInfo.push(\n    <Row key='idmg'><Col sm={3}>Idmg calcule</Col><Col className=\"idmg\">{idmgCalcule || 'N/D'}</Col></Row>\n  )\n  listeInfo.push(\n    <Row key='securite'><Col sm={3}>Securite</Col><Col>{securite}</Col></Row>\n  )\n  if(domaine) {\n    listeInfo.push(\n      <Row key='domaineWeb'><Col sm={3}>Domaine web</Col><Col>{domaine}</Col></Row>\n    )\n  }\n  if(extensions) {\n    if(extensions.roles) {\n      listeInfo.push(\n        <Row key='roles'><Col sm={3}>Roles</Col><Col>{extensions.roles.toString()}</Col></Row>\n      )\n    }\n    if(extensions.niveauxSecurite) {\n      listeInfo.push(\n        <Row key='securite_liste'><Col sm={3}>Exchanges</Col><Col>{extensions.niveauxSecurite.toString()}</Col></Row>\n      )\n    }\n  }\n  if(certificat) {\n    listeInfo.push(\n      <Row key='noeudId'><Col sm={3}>Instance Id</Col><Col>{certificat.subject.getField('CN').value}</Col></Row>\n    )\n    listeInfo.push(\n      <Row key='validity_end'>\n        <Col sm={3}>Expiration</Col>\n        <Col className={certificatExpire?'expire':''}>\n          {certificat.validity.notAfter.toString()}\n          {' '}\n          {certificatJoursExpiration?'(' + certificatJoursExpiration + ' jours)':<strong>Expire aujourd'hui</strong>}\n        </Col>\n      </Row>\n    )\n    if(securite === '3.protege') {\n      listeInfo.push(\n        <Row key='validity_inter_end'>\n          <Col sm={3}>Expiration intermediaire</Col>\n          <Col className={intermediaireExpire?'expire':''}>{certificatIntermediaire.validity.notAfter.toString()}</Col>\n        </Row>\n      )\n    }\n  }\n  if(pemCertificat) {\n    listeInfo.push(\n      <Row key='certificat'>\n        <Col sm={3}>Certificat</Col>\n        <Col><pre>{pemCertificat}</pre></Col>\n      </Row>\n    )\n  }\n\n  var etat = null, \n      // pret = false, \n      boutons = ''\n  if(certificat) {\n    if(intermediaireExpire) {\n      etat = (\n        <Alert variant=\"danger\">\n          <Alert.Heading>Certificat intermediaire expire</Alert.Heading>\n          <p>Le certificat intermediaire est expire. <strong>Action avec cle de MilleGrille requise des que possible.</strong></p>\n        </Alert>\n      )\n    } else if(certificatExpire) {\n      etat = (\n        <Alert variant=\"danger\">\n          <Alert.Heading>Certificat expire</Alert.Heading>\n          <p>Le certificat de l'instance est expire. <strong>Action requise</strong>.</p>\n        </Alert>\n      )\n    } else {\n      etat = <Alert variant=\"success\">L'instance est initialisee et active.</Alert>\n    }\n    // pret = true\n    boutons = (\n      <Row>\n        <Col>\n          <Button href=\"/millegrilles\">Acceder</Button>\n          <Button disabled={securite!=='3.protege'} variant=\"secondary\" onClick={()=>props.changerPage('RenouvellementIntermediaire')}>Renouveller</Button>\n        </Col>\n      </Row>\n    )\n  } else if(props.rootProps.idmg) {\n    etat = (\n      <Alert variant=\"warning\">L'instance est associee a une MilleGrille mais pas encore initialisee.</Alert>\n    )\n  } else {\n    etat = (\n      <Alert variant=\"warning\">L'instance n'est pas associe a une MilleGrille</Alert>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Information</h2>\n\n      {etat}\n\n      {listeInfo}\n\n      {boutons}\n\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport moment from 'moment';\n\n// the translations\nimport 'moment/locale/fr'\nimport fr from './labels.fr.json';\nimport en from './labels.en.json';\nconst resources = {fr, en};\n\nfunction formatterValeur(value, format, lng) {\n  if(value instanceof Date) {\n    return moment(value).locale(lng).format(format);\n  } else if(!isNaN(value) && !isNaN(format)) {\n    return Number(value).toFixed(format);\n  }\n\n  return value;\n}\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: 'fr',\n\n    keySeparator: '.', // we use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react is already safe from xss,\n      format: formatterValeur\n    }\n  });\n\nexport default i18n;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './components/i18n'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}