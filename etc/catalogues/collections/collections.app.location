location = /collections/initSession {{
  include /etc/nginx/conf.d/modules/collections.app.proxypass;
  proxy_pass_request_body off;
  proxy_set_header X-Original-URI $request_uri;
  include /etc/nginx/conf.d/auth.include;
}}

location = /collections/fichiers/verifier {{
  include /etc/nginx/conf.d/modules/collections.app.proxypass;
  proxy_pass_request_body off;
  proxy_set_header X-Original-URI $request_uri;
}}

location = /collections/streams/verifier {{
  include /etc/nginx/conf.d/modules/collections.app.proxypass;
  proxy_pass_request_body off;
  proxy_set_header X-Original-URI $request_uri;
}}

location /collections/fichiers {{
  include /etc/nginx/conf.d/modules/fichiers.proxypass;

  # Laisser collections confirmer que l'usager est actif, a acces au fichier
  auth_request      /collections/fichiers/verifier;

  # consignation.fichiers supporte les transfert avec PUT/POST/DELETE
  # Ces transferts doivent etre bloques (utiliser /upload de collections a la place)
  if ($request_method !~ GET|OPTIONS) {{
    return 405;
  }}

  # Rewrite pour consignation.grosfichiers
  rewrite ^(/collections/fichiers/)(.*)$ /fichiers_transfert/$2 break;

  # Override header verified, aucun check SSL requis (cert nginx uniquement)
  proxy_set_header VERIFIED INTERNAL;
  proxy_set_header  Host              $host;
  proxy_set_header  X-Hostname        $hostname;

  # Cache de fichiers du proxy
  proxy_cache       cache_fichiers;
  proxy_cache_lock  on;
  proxy_cache_background_update on;
  proxy_cache_use_stale error timeout updating
                        http_500 http_502 http_503 http_504;

  proxy_cache_key   $uri$is_args$args$slice_range;
  proxy_set_header  Range $slice_range;
  proxy_cache_valid 200 201 202 206 1d;
  proxy_cache_valid 404 15s;
  proxy_cache_valid 401 403 500 502 503 504 5s;

  # Config commune pour acces a consignation
  # include /etc/nginx/conf.d/component_fichiers.include;
}}

location /collections/streams {{
  include /etc/nginx/conf.d/modules/stream.app.proxypass;

  # Laisser collections confirmer que l'usager est actif, a acces au fichier
  auth_request      /collections/streams/verifier;

  # consignation.fichiers supporte les transfert avec PUT/POST/DELETE
  # Ces transferts doivent etre bloques (utiliser /upload de collections a la place)
  if ($request_method !~ GET|OPTIONS|HEAD) {{
    return 405;
  }}

  # Rewrite pour consignation.grosfichiers
  rewrite ^(/collections/streams/)(.*)$ /stream_transfert/$2 break;

  # Override header verified, aucun check SSL requis (cert nginx uniquement)
  proxy_set_header VERIFIED INTERNAL;
  proxy_set_header  Host              $host;
  proxy_set_header  X-Hostname        $hostname;

  # Cache de streams du proxy.
  slice 5m;
  proxy_cache       cache_streams;
  proxy_cache_lock  on;
  proxy_cache_lock_timeout 2m;

  proxy_cache_key   $uri$slice_range;
  proxy_cache_valid 200 206 6h;
  proxy_cache_valid 202 204 1s;
  proxy_cache_valid 404 15s;
  proxy_cache_valid 401 403 500 502 503 504 5s;
}}

location /collections/fichiers/upload {{
  include /etc/nginx/conf.d/modules/collections.app.proxypass;

  include /etc/nginx/conf.d/auth.include;
  include /etc/nginx/conf.d/component_proxyheaders.include;

  proxy_read_timeout 5m;
  client_max_body_size 101m;
}}

location /collections {{
  include /etc/nginx/conf.d/modules/collections.app.proxypass;
#set $upstream_collections https://__SERVER__:3038;
#proxy_pass $upstream_collections;

  include /etc/nginx/conf.d/auth.include;

  include /etc/nginx/conf.d/component_proxyheaders.include;
  include /etc/nginx/conf.d/component_gzip.include;
  proxy_read_timeout 15m;
  client_max_body_size 64k;
}}
